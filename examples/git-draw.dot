digraph structs {
  node [shape=record,fontsize=11];
  rankdir="TB";
  subgraph cluster_0 {
    color=gray80;
    label = "legend\l";
    legend_node [label="{{type:subtype|id/name}|content\l|metadata from config\l}"]
  }
  _50ed [fillcolor="white", style="filled,rounded", label="{{obj:blob|50ed}|\`git\-draw\`\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\.\ For\ example\ after\ the\ following\ few\ git\ commands\l\l\	git\ init\l\	echo\ \'hello\ world\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\	git\ commit\ \-m\ \'initial\ commit\'\l\	git\ tag\ R1\ \-m\ R1\l\	echo\ \'bye\ bye\'\ \>\ parting\.txt\l\	git\ add\ parting\.txt\l\	git\ commit\ \-m\ \'added\ parting\'\l\	echo\ \'welcome\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\l\`git\-draw\`\ will\ display\ the\ following\ image\l\l\[\[example\.png\]\]\l\l\#\#\ Documentation\lThe\ text\ provided\ here\ is\ a\ copy\ of\ the\ documentation\ the\ \`git\-draw\`\ script\ contains\.\l\l\	NAME\l\	\ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\l\	SYNOPSIS\l\	\ \ git\-draw\ \[OPTION\]\.\.\.\l\l\	PREREQUISITES\l\	\ \ You\ don\'t\ need\ all\ of\ these\ if\ you\ use\ git\-draw\ with\ certain\ options\.\l\l\	\ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\	\ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\l\	\ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\l\	\ \ \ \ sudo\ apt\-get\ install\ graphviz\ imagemagick\l\l\	DESCRIPTION\l\	\ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\ for\l\	\ \ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\l\	\ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\	\ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\	\ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\l\	\ \ The\ current\ working\ directory\ must\ be\ at\ the\ root\ of\ the\ working\ tree\ of\l\	\ \ your\ project\,\ i\.e\.\ the\ directory\ which\ contains\ the\ \.git\ directory\.\l\l\	\ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\	\ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\	\ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\	\ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\	\ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\	\ \ references\ aka\ pointers\ and\ graphs\.\l\l\	OPTIONS\l\	\ \ \-p\,\ \-\-print\-only\l\	\ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\ \-\-image\-only\.\l\l\	\ \ \-i\,\ \-\-image\-only\l\	\ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\ Mutually\l\	\ \ \ \ exclusive\ with\ \-\-print\-only\.\l\l\	AUTHOR\l\	\ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\l\	COPYRIGHT\l\	\ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\	\ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\	\ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\ by\l\	\ \ law\.\l}"]  _9daa [fillcolor="white", style="filled,rounded", label="{{obj:blob|9daa}|\.DS\_Store\lnode\_modules\l}"]  _bc19 [fillcolor="white", style="filled,rounded", label="{{obj:blob|bc19}|\`git\-draw\`\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\.\ For\ example\ after\ the\ following\ few\ git\ commands\l\l\	git\ init\l\	echo\ \'hello\ world\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\	git\ commit\ \-m\ \'initial\ commit\'\l\	git\ tag\ R1\ \-m\ R1\l\	echo\ \'bye\ bye\'\ \>\ parting\.txt\l\	git\ add\ parting\.txt\l\	git\ commit\ \-m\ \'added\ parting\'\l\	echo\ \'welcome\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\l\`git\-draw\`\ will\ display\ the\ following\ image\l\l\[\[example\.png\]\]\l\l\#\#\ Documentation\lThe\ text\ provided\ here\ is\ a\ copy\ of\ the\ documentation\ the\ \`git\-draw\`\ script\ contains\.\l\l\	NAME\l\	\ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\	\l\	SYNOPSIS\l\	\ \ git\-draw\ \[OPTION\]\.\.\.\l\	\l\	PREREQUISITES\l\	\ \ You\ don\'t\ need\ all\ of\ these\ if\ you\ use\ git\-draw\ with\ certain\ options\.\l\	\l\	\ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\	\ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\	\l\	\ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\	\l\	\ \ \ \ sudo\ apt\-get\ install\ graphviz\ imagemagick\l\	\l\	DESCRIPTION\l\	\ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\ for\l\	\ \ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\	\l\	\ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\	\ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\	\ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\	\l\	\ \ The\ current\ working\ directory\ must\ be\ at\ the\ root\ of\ the\ working\ tree\ of\l\	\ \ your\ project\,\ i\.e\.\ the\ directory\ which\ contains\ the\ \.git\ directory\.\l\	\l\	\ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\	\ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\	\ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\	\ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\	\ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\	\ \ references\ aka\ pointers\ and\ graphs\.\l\	\l\	OPTIONS\l\	\ \ \-p\,\ \-\-print\-only\l\	\ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\ \-\-image\-only\.\l\	\l\	\ \ \-i\,\ \-\-image\-only\l\	\ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\ Mutually\l\	\ \ \ \ exclusive\ with\ \-\-print\-only\.\l\	\l\	AUTHOR\l\	\ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\	\l\	COPYRIGHT\l\	\ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\	\ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\	\ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\ by\l\	\ \ law\.\l}"]  _c067 [fillcolor="lightyellow", style="filled,rounded", label="{{obj:tree|c067}|100644\ blob\ b04a\	\.editorconfig\l100644\ blob\ db71\	\.gitattributes\l100644\ blob\ 9daa\	\.gitignore\l100644\ blob\ 50ed\	README\.md\l100755\ blob\ c3df\	git\-draw\l}"]  _c067 -> _b04a
  _c067 -> _db71
  _c067 -> _9daa
  _c067 -> _50ed
  _c067 -> _c3df
  _caf0 [fillcolor="lightyellow", style="filled,rounded", label="{{obj:tree|caf0}|100644\ blob\ b04a\	\.editorconfig\l100644\ blob\ db71\	\.gitattributes\l100644\ blob\ 9daa\	\.gitignore\l100644\ blob\ bc19\	README\.md\l100755\ blob\ fb9f\	git\-draw\l}"]  _caf0 -> _b04a
  _caf0 -> _db71
  _caf0 -> _9daa
  _caf0 -> _bc19
  _caf0 -> _fb9f
  _fb9f [fillcolor="white", style="filled,rounded", label="{{obj:blob|fb9f}|\#\!\/bin\/bash\l\#SPDX\-License\-Identifier\:\ GPL\-3\.0\ \l\#\ NAME\l\#\ \ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\#\ \l\#\ SYNOPSIS\l\#\ \ \ git\-draw\ \[OPTION\]\.\.\.\l\#\l\#\ PREREQUISITES\l\#\ \ \ You\ don\'t\ need\ graphviz\ or\ imagemagick\ if\ you\ use\ git\-draw\ with\ certain\l\#\ \ \ options\.\l\#\l\#\ \ \ \-\ perl\l\#\ \ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\#\ \ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\#\l\#\ \ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\#\l\#\ \ \ \ \ sudo\ apt\-get\ install\ perl\ graphviz\ imagemagick\l\#\l\#\ DESCRIPTION\l\#\ \ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\l\#\ \ \ for\ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\#\l\#\ \ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\#\ \ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\#\ \ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\#\l\#\ \ \ As\ long\ as\ you\ run\ git\-draw\ from\ within\ a\ git\ repository\,\ it\ will\ graph\l\#\ \ \ the\ repository\.\ \ \ An\ alternate\ git\ repository\ can\ be\ chosen\ using\ the\ \l\#\ \ \ \-\-git\-dir\ and\/or\ \-\-work\-dir\ flags\.\l\#\l\#\ \ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\#\ \ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\#\ \ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\#\ \ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\#\ \ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\#\ \ \ references\ aka\ pointers\ and\ graphs\.\l\#\l\#\ OPTIONS\l\#\ \ \ \-h\,\ \-\-help\l\#\ \ \ \ \ Prints\ a\ help\ message\ and\ exits\.\l\#\l\#\ \ \ \-p\,\ \-\-print\-only\l\#\ \ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\l\#\ \ \ \ \ \-\-image\-only\.\l\#\l\#\ \ \ \-i\,\ \-\-image\-only\l\#\ \ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\l\#\ \ \ \ \ Mutually\ exclusive\ with\ \-\-print\-only\.\l\#\l\#\ \ \ \-g\,\ \-\-git\-dir\l\#\ \ \ \ \ Git\ repository\ directory\ to\ use\l\#\l\#\ \ \ \-w\,\ \-\-work\-dir\ \ \ \ \l\#\ \ \ \ \ Top\ level\ git\ working\ directory\l\#\l\#\ \ \ \-\-dot\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\#\l\#\ \ \ \-\-image\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\#\l\#\ \ \ \-\-display\-cmd\ \<command\>\l\#\ \ \ \ \ Command\ to\ use\ to\ display\ image\l\#\l\#\ \ \ \-\-sha1\-length\ \<length\>\l\#\ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\ in\ the\ graph\.\ Must\ be\ a\ number\ between\l\#\ \ \ \ \ 4\ and\ 40\ inclusive\.\l\#\l\#\ \ \ \-\-hide\-legend\l\#\ \ \ \ \ Don\'t\ display\ the\ legend\l\#\l\#\ \ \ \-\-hide\-objects\l\#\ \ \ \ \ Don\'t\ display\ git\ objects\l\#\l\#\ \ \ \-\-hide\-refs\l\#\ \ \ \ \ Don\'t\ display\ references\l\#\l\#\ \ \ \-\-hide\-reflogs\l\#\ \ \ \ \ Don\'t\ display\ reflogs\l\#\l\#\ \ \ \-\-hide\-index\l\#\ \ \ \ \ Don\'t\ display\ the\ index\l\#\l\#\ \ \ \-\-hide\-workingtree\l\#\ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\#\l\#\ \ \ \-\-hide\-commitcontent\l\#\ \ \ \ \ Hide\ commit\ content\l\#\l\#\ \ \ \-\-hide\-tagcontent\l\#\ \ \ \ \ Hide\ tag\ content\l\#\l\#\ \ \ \-\-hide\-treecontent\l\#\ \ \ \ \ Hide\ tree\ content\l\#\l\#\ \ \ \-\-hide\-blobcontent\l\#\ \ \ \ \ Hide\ blob\ content\l\#\l\#\ \ \ \-\-color\-scheme\ \<color\ scheme\>\l\#\ \ \ \ \ Choose\ color\ scheme\.\ \<color\ scheme\>\ can\ be\ one\ of\:\ default\,\ set312\,\l\#\ \ \ \ \ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\ dark28\,\ paired12\,\ pastel19\,\ set19\l\#\l\#\ \ \ \-\-color\-commit\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ commit\ objects\l\#\l\#\ \ \ \-\-color\-tag\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tag\ objects\l\#\l\#\ \ \ \-\-color\-tree\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tree\ objects\ \l\#\l\#\ \ \ \-\-color\-blob\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ blob\ objects\l\#\l\#\ \ \ \-\-color\-default\ \<color\>\l\#\ \ \ \ \ Set\ default\ color\l\#\l\#\ \ \ \-\-orientation\ \<orientation\>\l\#\ \ \ \ \ Change\ the\ layout\ orientation\ of\ the\ graph\.\ Must\ be\ one\ of\ the\l\#\ \ \ \ \ following\:\l\#\ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\#\ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\#\ \ \ \ \ \ \ LR\ \ left\ to\ right\l\#\ \ \ \ \ \ \ RL\ \ right\ to\ left\l\#\l\#\ \ \ \-\-title\ \<text\>\l\#\ \ \ \ \ Adds\ the\ given\ text\ as\ title\ to\ the\ drawing\l\#\l\#\ AUTHOR\l\#\ \ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\#\ \ \ Modifications\ by\ Nathan\ Doss\ \<nathan\.doss\@gmail\.com\>\l\#\l\#\ COPYRIGHT\l\#\ \ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\#\ \ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\#\ \ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\l\#\ \ \ by\ law\.\l\#\ \l\#\ SEE\ ALSO\l\#\ \ \ git\(1\)\l\l\#\ define\ color\ schemes\lcolor\_scheme\_default\_commit\=\"palegreen1\"\lcolor\_scheme\_default\_tree\=\"lightyellow\"\lcolor\_scheme\_default\_blob\=\"white\"\lcolor\_scheme\_default\_tag\=\"white\"\lcolor\_scheme\_default\_default\=\"white\"\l\lcolor\_scheme\_set312\_commit\=\"\/set312\/7\"\lcolor\_scheme\_set312\_tree\=\"\/set312\/6\"\lcolor\_scheme\_set312\_blob\=\"\/set312\/3\"\lcolor\_scheme\_set312\_tag\=\"\/set312\/12\"\lcolor\_scheme\_set312\_default\=\"white\"\l\lcolor\_scheme\_spectral11\_commit\=\"\/spectral11\/8\"\lcolor\_scheme\_spectral11\_tree\=\"\/spectral11\/4\"\lcolor\_scheme\_spectral11\_blob\=\"\/spectral11\/10\"\lcolor\_scheme\_spectral11\_tag\=\"\/spectral11\/5\"\lcolor\_scheme\_spectral11\_default\=\"white\"\l\lcolor\_scheme\_blues9\_commit\=\"\/blues9\/3\"\lcolor\_scheme\_blues9\_tree\=\"\/blues9\/5\"\lcolor\_scheme\_blues9\_blob\=\"\/blues9\/7\"\lcolor\_scheme\_blues9\_tag\=\"\/blues9\/2\"\lcolor\_scheme\_blues9\_default\=\"white\"\l\lcolor\_scheme\_brbg11\_commit\=\"\/brbg11\/3\"\lcolor\_scheme\_brbg11\_tree\=\"\/brbg11\/5\"\lcolor\_scheme\_brbg11\_blob\=\"\/brbg11\/7\"\lcolor\_scheme\_brbg11\_tag\=\"\/brbg11\/9\"\lcolor\_scheme\_brbg11\_default\=\"white\"\l\lcolor\_scheme\_bupu9\_commit\=\"\/bupu9\/2\"\lcolor\_scheme\_bupu9\_tree\=\"\/bupu9\/4\"\lcolor\_scheme\_bupu9\_blob\=\"\/bupu9\/6\"\lcolor\_scheme\_bupu9\_tag\=\"\/bupu9\/8\"\lcolor\_scheme\_bupu9\_default\=\"white\"\l\lcolor\_scheme\_dark28\_commit\=\"\/dark28\/5\"\lcolor\_scheme\_dark28\_tree\=\"\/dark28\/2\"\lcolor\_scheme\_dark28\_blob\=\"\/dark28\/3\"\lcolor\_scheme\_dark28\_tag\=\"\/dark28\/6\"\lcolor\_scheme\_dark28\_default\=\"white\"\l\lcolor\_scheme\_paired12\_commit\=\"\/paired12\/3\"\lcolor\_scheme\_paired12\_tree\=\"\/paired12\/1\"\lcolor\_scheme\_paired12\_blob\=\"\/paired12\/7\"\lcolor\_scheme\_paired12\_tag\=\"\/paired12\/11\"\lcolor\_scheme\_paired12\_default\=\"white\"\l\lcolor\_scheme\_pastel19\_commit\=\"\/pastel19\/3\"\lcolor\_scheme\_pastel19\_tree\=\"\/pastel19\/5\"\lcolor\_scheme\_pastel19\_blob\=\"\/pastel19\/4\"\lcolor\_scheme\_pastel19\_tag\=\"\/pastel19\/6\"\lcolor\_scheme\_pastel19\_default\=\"white\"\l\lcolor\_scheme\_set19\_commit\=\"\/set19\/3\"\lcolor\_scheme\_set19\_tree\=\"\/set19\/5\"\lcolor\_scheme\_set19\_blob\=\"\/set19\/2\"\lcolor\_scheme\_set19\_tag\=\"\/set19\/6\"\lcolor\_scheme\_set19\_default\=\"white\"\l\lexport\ GIT\_DIR\=\$\(git\ rev\-parse\ \-\-git\-dir\)\lexport\ GIT\_WORK\_TREE\=\$\(git\ rev\-parse\ \-\-show\-toplevel\)\l\lmake\_imgfilename\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ opendir\(DIR\,\$ARGV\[0\]\)\;\l\ \ \ \ foreach\(readdir\(DIR\)\)\ \{\l\	\	\ \ if\ \(\ m\/git\-draw\(\\d\+\)\.png\/\ \)\ \{\l\ \ \ \ \ \ \ \ if\ \(\ \$1\ \>\ \$max\ \)\ \{\ \$max\ \=\ \$1\ \}\;\l\ \ \ \ \ \ \}\l\ \ \ \ \}\l\ \ \ \ print\ \"git\-draw\"\ \.\ \(\$max\+1\)\ \.\ \"\.png\"\'\ \"\$GIT\_WORK\_TREE\"\l\}\l\l\#\ set\ defaults\ldotfilename\=git\-draw\.dot\limgfilename\=\$\(make\_imgfilename\)\ldisplaycmd\=display\lsha1length\=4\lshowlegend\=1\lshowobjects\=1\lshowrefs\=1\lshowreflogs\=1\lshowindex\=1\lshowworkingtree\=1\lshowcommitcontent\=1\lshowtreecontent\=1\lshowtagcontent\=1\lshowblobcontent\=1\lorientation\=\"TB\"\ltitle\=\lcolorscheme\=\"default\"\l\l\#\ set\ colors\ \(hack\ \.\.\.\ got\ to\ be\ a\ better\ way\)\lcolor\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\lcolor\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\lcolor\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\lcolor\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\lcolor\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\l\#\ \$1\ \=\ exit\ code\lprint\_usage\_and\_exit\(\)\ \{\l\ \ cat\ \<\<EOF\lUsage\:\ git\-draw\ \[options\]\l\ \ \-h\|\-\-help\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Print\ help\ message\ \&\ exit\l\ \ \-p\|\-\-print\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ print\ \.dot\ to\ stdout\l\ \ \-i\|\-\-image\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ create\ an\ image\,\ and\ a\ \.dot\ file\ beforehand\l\ \ \-g\|\-\-git\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Git\ repository\ directory\ to\ use\l\ \ \-w\|\-\-work\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Top\ level\ git\ working\ directory\l\ \ \-\-dot\-filename\ \<filename\>\ \ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\ \ \-\-image\-filename\ \<filename\>\ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\ \ \-\-display\-cmd\ \<command\>\ \ \ \ \ \ \ \ Command\ to\ use\ to\ display\ image\l\ \ \-\-sha1\-length\ \<length\>\ \ \ \ \ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\l\ \ \-\-hide\-legend\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ legend\l\ \ \-\-hide\-objects\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ git\ objects\l\ \ \-\-hide\-refs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ references\l\ \ \-\-hide\-reflogs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ reflogs\l\ \ \-\-hide\-index\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ index\l\ \ \-\-hide\-workingtree\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\ \ \-\-hide\-commitcontent\ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ commit\ content\l\ \ \-\-hide\-tagcontent\ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tag\ content\l\ \ \-\-hide\-treecontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tree\ content\l\ \ \-\-hide\-blobcontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ blob\ content\l\ \ \-\-color\-scheme\ \<color\ scheme\>\ \ Choose\ color\ scheme\.\ Can\ be\ one\ of\:\ default\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ set312\,\ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dark28\,\ paired12\,\ pastel19\,\ set19\l\ \ \-\-color\-commit\ \<color\>\ \ \ \ \ \ \ \ \ Set\ color\ for\ commit\ objects\l\ \ \-\-color\-tag\ \<color\>\ \ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tag\ objects\l\ \ \-\-color\-tree\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tree\ objects\l\ \ \-\-color\-blob\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ blob\ objects\l\ \ \-\-color\-default\ \<color\>\ \ \ \ \ \ \ \ Set\ default\ color\l\ \ \-\-orientation\ \<orientation\>\ \ \ \ Change\ the\ graph\ orientation\.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<orientation\>\ must\ be\ one\ of\ the\ following\:\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LR\ \ left\ to\ right\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ RL\ \ right\ to\ left\l\ \ \-\-title\ \<text\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Add\ \<text\>\ as\ title\ to\ the\ drawing\l\lThe\ primary\ documentation\ is\ at\ the\ top\ of\ the\ git\-draw\ script\ itself\.\lEOF\l\ \ exit\ \"\$1\"\l\}\l\l\#\ TODO\l\#\ \ \ \-\ \ Layout\ graph\ so\ commit\ DAG\ is\ top\-down\ and\ on\ the\ left\,\ probably\ using\l\#\ \ \ \ \ \ graphviz\'s\ ranks\.\l\#\ \ \ \-\ \ Optionally\ use\ temporary\ files\ which\ the\ user\ does\ not\ directly\ see\l\#\ \ \ \-\ \ Optionally\ omit\ drawing\ the\ content\ of\ all\/certain\ objects\/refs\ so\ a\l\#\ \ \ \ \ \ bit\ larger\ than\ tiny\ repositories\ still\ draw\ usefully\.\l\#\ \ \ \-\ \ tree\ objects\ \/\ reflogs\ shall\ fan\ out\ graph\ edges\ at\ corresponding\ line\l\#\ \ \ \ \ \ in\ content\l\#\ \ \ \-\ \ Amend\ type\ cell\ \(top\ left\)\ and\ id\ cell\ \(top\ right\)\ with\ the\ prefix\l\#\ \ \ \ \ \ \'type\=\'\ and\ \'id\=\'\ to\ be\ very\ clear\.\ Optionally\ turn\ off\ with\ options\.\l\#\ \ \ \-\ \ Provide\ options\ to\ choose\ the\ tool\ to\ display\ the\ image\ outputted\ by\l\#\ \ \ \ \ \ dot\.\l\#\ \ \ \-\ \ Read\ gitrepository\-layou\(1\)\ to\ find\ out\ more\ things\ which\ could\ be\l\#\ \ \ \ \ \ displayed\l\#\ \ \ \-\ \ Draw\ multiple\ repos\ in\ one\ image\.\ Usefull\ to\ demonstrate\ distributed\ git\.\l\#\ \ \ \-\ \ Draw\ packed\ objects\ and\ refs\ in\ a\ subgraph\ respectively\.\l\#\ \ \ \-\ \ Allow\ that\ the\ current\ working\ directory\ can\ be\ any\ subdirectory\ of\ a\l\#\ \ \ \ \ \ git\ project\.\ Similarly\,\ allow\ to\ specify\ the\ git\ repository\ via\ command\l\#\ \ \ \ \ \ line\ arguments\.\l\labbreviate\_sha1\(\)\ \{\l\ \ \#\ BUG\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\ replace\ what\ looks\ like\ a\ sha1\l\ \ perl\ \-pe\ \'s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\'\l\}\l\lls\_all\_objects\(\)\ \{\l\ \ \#\ unpacked\ objects\l\ \ find\ \"\$GIT\_DIR\"\/objects\/\ \-type\ f\ \|\l\ \ \ \ perl\ \-ne\ \'print\ \"\$1\$2\\n\"\ if\ m\@\^\.\*\/\(\[a\-f0\-9\]\{2\}\)\/\(\[a\-f0\-9\]\{38\}\)\@\'\ \l\l\ \ \#\ packed\ objects\l\ \ \#\ note\ that\ the\ \.idx\ is\ not\ always\ present\l\ \ find\ \"\$GIT\_DIR\"\/objects\/pack\/\ \-iname\ \'\*\.idx\'\ \|\ while\ read\ idxfile\;\ do\l\ \ \ \ cat\ \"\$idxfile\"\ \|\ git\ show\-index\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\[a\-f0\-9\]\{40\}\)\.\*\$\@\$1\@\'\l\ \ done\l\}\l\l\#\ Prints\ all\ references\,\ one\ null\-character\ delimited\ \'line\'\ per\ ref\.\ Each\l\#\ \'line\'\ starts\ with\ the\ name\ of\ the\ ref\,\ followed\ by\ space\,\ followed\ by\ the\l\#\ conent\ of\ the\ ref\,\ which\ can\ consist\ of\ any\ characters\,\ most\ notably\l\#\ newlines\.\lls\_all\_refs\(\)\ \{\l\ \ \#\ print\ all\ normal\ refs\.\ \'git\ show\-ref\'\ prints\ referee\ and\ ref\ name\ in\ the\l\ \ \#\ wrong\ order\ for\ our\ purpose\,\ so\ swap\ the\ order\l\ \ git\ show\-ref\ \|\l\ \ \ \ perl\ \-pe\ \'chomp\;\ s\/\^\(\\S\+\)\\s\*\(\\S\*\)\$\/\$2\ \$1\\0\/\'\l\l\ \ \#\ print\ HEAD\ and\ all\ special\ refs\l\ \ for\ special\_ref\ in\ \.git\/\*HEAD\ \;\ do\l\ \ \ \ printf\ \"\%s\"\ \"\$\(basename\ \"\$special\_ref\"\)\ \"\l\ \ \ \ cat\ \"\$special\_ref\"\l\ \ \ \ printf\ \"\\0\"\l\ \ done\l\}\l\lls\_all\_objects\_short\(\)\ \{\l\ \ ls\_all\_objects\ \|\ while\ read\ sha1\;\ do\l\ \ \ \ git\ rev\-parse\ \-\-short\=\$sha1length\ \"\$sha1\"\l\ \ done\l\}\l\lprint\_dot\_objects\(\)\ \{\l\ \ ls\_all\_objects\_short\ \|\ while\ read\ id\;\ do\l\ \ \ \ dotid\=\"\_\$id\"\l\ \ \ \ object\_type\=\$\(git\ cat\-file\ \-t\ \"\$id\"\)\l\ \ \ \ objcontent\=\$\(git\ cat\-file\ \-p\ \"\$id\"\ \|\ abbreviate\_sha1\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\'\)\l\l\ \ \ \ case\ \$object\_type\ in\l\ \ \ \ commit\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_commit\"\l\ \ \ \ \ \ if\ \[\ \$showcommitcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tag\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tag\"\l\ \ \ \ \ \ if\ \[\ \$showtagcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tree\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tree\"\l\ \ \ \ \ \ if\ \[\ \$showtreecontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ blob\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_blob\"\l\ \ \ \ \ \ if\ \[\ \$showblobcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ \*\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_default\"\l\ \ \ \ \ \ \;\;\l\ \ \ \ esac\l\l\ \ \ \ printf\ \%s\ \"\ \ \$dotid\ \[fillcolor\=\\\"\$fillcolor\\\"\,\ style\=\\\"filled\,rounded\\\"\,\ \"\\\l\ \ \ \ \ \ \"label\=\\\"\{\{obj\:\$object\_type\|\$id\}\|\$objcontent\}\\\"\]\"\l\l\ \ \ \ \#\ todo\:\ use\ git\'s\ commands\ to\ extract\ the\ object\ references\l\ \ \ \ \#\ BUG\:\ must\ escape\ stuff\ that\ \.dot\ interprets\ \(\\n\,\\l\,\\l\,\|\,\{\}\,\.\.\.\)\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ cannot\ deal\ with\ multiple\ sha1\ on\ one\ line\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\l\ \ \ \ \#\ \ \ replace\ what\ looks\ like\ a\ sha1\l\ \ \ \ git\ cat\-file\ \-p\ \"\$id\"\ \|\l\ \ \ \ \ \ perl\ \-ne\ \'print\ \"\ \ \'\"\$dotid\"\'\ \-\>\ \_\"\ \.\l\ \ \ \ \ \ \ \ \`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\ if\ \/\(\[a\-f0\-9\]\{40\}\)\/\'\l\ \ done\l\l\ \ \#\ \-\-no\-reflogs\ is\ used\ and\ \-\-cache\ is\ \_not\_\ used\ because\ at\ the\ beginning\,\l\ \ \#\ it\ is\ easier\ to\ teach\ novices\ the\ concept\ of\ unreachable\ objects\ when\ the\l\ \ \#\ index\ and\ the\ reflogs\ are\ ignored\.\ \ In\ the\ tiny\ repositories\ git\-draw\ aims\l\ \ \#\ at\,\ the\ reflog\l\ \ git\ fsck\ \-\-no\-reflogs\ \-\-unreachable\ \-\-dangling\ 2\>\/dev\/null\ \|\l\ \ \ perl\ \-ne\ \'print\ \"\ \ \_\"\ \.\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\ \.\l\ \ \ \ \ \"\ \[style\=\\\"dotted\,rounded\\\"\,\ fontcolor\=gray\,\ color\=gray\]\\n\"\ if\ \/\^\(\?\:dangling\|unreachable\)\\b\.\*\?\(\[a\-f0\-9\]\{40\}\)\/\'\l\}\l\lprint\_dot\_references\(\)\ \{\l\ \ ls\_all\_refs\ \|\l\ \ \ \ perl\ \-ne\ \'\l\ \ \ \ \ \ BEGIN\ \{\ \$\/\ \=\ \"\\0\"\;\ \}\l\ \ \ \ \ \ chomp\;\l\ \ \ \ \ \ if\ \(m\@\^\(\\S\+\)\ \(\.\*\)\@s\)\ \{\ \#\ \$\_\ contains\ newlines\l\ \ \ \ \ \ \ \ \$currentref\ \=\ \$1\;\l\ \ \ \ \ \ \ \ \{\ local\ \$\/\ \=\ \"\\n\"\;\l\ \ \ \ \ \ \ \ \ \ chomp\(\$referee\_lines\ \=\ \$2\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \(\$currentref\_quoted\ \=\ \$currentref\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \$dotid\_currentref\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$currentref\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\l\ \ \ \ \ \ \ \ \#\ determine\ \$reftype\,\ \$fillcolor\,\ \$configmetadata\,\ \$fontcolorelement\l\ \ \ \ \ \ \ \ \$reftype\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"gray\"\;\l\ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \#\ local\ branches\l\ \ \ \ \ \ \ \ if\ \(\$currentref\ \=\~\ m\@\^refs\/heads\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:local\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \(\$currentref\_short\ \=\ \$currentref\)\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \$remote\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.remote\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ \$merge\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.merge\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ \&\&\ \$merge\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ eq\ \"\.\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$merge\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\ \$merge\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_remote\ \=\ \(\(\$tmp\ \=\ \$remote\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_refs\_\_\_remotes\_\_\_\$\{dotid\_remote\}\_\_\_\$\{dotid\_merge\_core\}\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_merge\ \[style\=dotted\,\ color\=gray\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"upstream\ branch\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\ \"remote\ \=\ \$remote\\nmerge\ \=\ \$merge\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\\n\/\\\\l\/g\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\l\ \ \ \ \ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\|\$tmp\"\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ remote\ tracking\ branches\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/remotes\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:remote\ tracking\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"yellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ tags\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/tags\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:tag\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"lightyellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ HEAD\ and\ pseudorefs\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\/\^\[A\-Z0\-9\_\]\*HEAD\$\/\)\ \{\ \l\ \ \ \ \ \ \ \ \ \ unless\ \(\$currentref\ eq\ \"HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:pseudoref\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ if\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ ORIG\_HEAD\ is\ semantically\ like\ a\ poor\ mans\ reflog\,\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ thus\ same\ colors\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"white\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"color\=gray90\,\ fontcolor\=gray\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"gray30\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"fontcolor\=white\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ outgoing\ edges\ \(to\ the\ referees\)\ of\ current\ reference\l\ \ \ \ \ \ \ \ my\ \$all\_referees\_exist\ \=\ 1\;\l\ \ \ \ \ \ \ \ my\ \@adorned\_quoted\_referees\ \=\ \(\)\;\l\ \ \ \ \ \ \ \ for\ my\ \$referee\_line\ \(split\(\"\\n\"\,\ \$referee\_lines\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \#\ Extract\ referee\ from\ referee\ line\.\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\^\(ref\:\ \)\?\(\\S\+\)\/\;\l\ \ \ \ \ \ \ \ \ \ my\ \$is\_symbolic\_ref\ \=\ \(length\(\$1\)\ \>\ 0\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$is\_symbolic\_ref\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ \$2\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\(\[0\-9a\-f\]\{40\}\)\/\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,\ 0\,\ \-1\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \#\ Actually\ print\ dot\l\ \ \ \ \ \ \ \ \ \ my\ \$adornment\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\_exists\ \=\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(\$referee\ \=\~\ m\/\^\[a\-f0\-9\]\+\$\/\)\ \|\|\ \#\ assume\ object\ with\ a\ sha1\ exists\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(0\ \=\=\ system\(\"git\ show\-ref\ \-\-verify\ \-\-quiet\ \-\-\ \$referee\"\)\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$referee\_exists\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$dotid\_referee\ \=\ \"\_\"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \(\(\$tmp\ \=\ \$referee\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$attribs\ \=\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \?\ \"\[color\=gray90\]\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_referee\ \$attribs\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$all\_referees\_exist\ \=\ 0\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$adornment\ \=\ \"\ \\\\\<does\ not\ exist\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \(\$referee\_line\_quoted\ \=\ \$referee\_line\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\_quoted\ \=\~\l\ \ \ \ \ \ \ \ \ \ \ \ s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\;\l\ \ \ \ \ \ \ \ \ \ push\(\@adorned\_quoted\_referees\,\ \"\$referee\_line\_quoted\$adornment\"\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ my\ \$adorned\_quoted\_referees\ \=\ join\(\"\\\\l\"\,\ \@adorned\_quoted\_referees\)\;\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ node\ representing\ current\ reference\l\ \ \ \ \ \ \ \ if\ \(\!\$all\_referees\_exist\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"red\"\;\l\ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \[\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"style\=filled\,\ fillcolor\=\$fillcolor\,\ \$fontcolorelement\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{ref\$reftype\|\$currentref\_quoted\}\|\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"\$adorned\_quoted\_referees\\\\l\$configmetadata\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \}\'\l\}\l\lprint\_dot\_ref\_logs\(\)\ \{\l\ \ firstiter\=\"non\-empty\-string\"\ \#\ i\.e\.\ true\l\ \ git\ show\-ref\ \-\-abbrev\=\$sha1length\ \|\l\ \ \ \ \#\ The\ following\ code\ depends\ upon\ HEAD\ being\ the\ last\ in\ the\ list\l\ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\\brefs\/\\S\*\)\$\@\$1\@\;\ END\ \{\ print\ \"HEAD\\n\"\;\}\'\ \|\l\ \ \ \ while\ read\ refname\;\ do\l\ \ \ \ \ \ \#\ work\ around\ the\ problem\ that\ \'git\ reflog\ show\ HEAD\'\ results\ in\ an\l\ \ \ \ \ \ \#\ error\ when\ HEAD\ contains\ refs\/heads\/master\ but\ refs\/heads\/master\ does\l\ \ \ \ \ \ \#\ not\ exist\,\ which\ is\ the\ case\ after\ \'git\ init\'\.\l\ \ \ \ \ \ if\ \[\ \!\ \\\(\ \"\$firstiter\"\ \-a\ \\\(\ \"\$refname\"\ \=\ HEAD\ \\\)\ \\\)\ \]\;\ then\l\ \ \ \ \ \ \ \ \#\ 8eb068f\ master\@\{11\}\:\ commit\:\ tempo\-ext\:\ new\ version\l\ \ \ \ \ \ \ \ git\ reflog\ show\ \"\$refname\"\ \|\ perl\ \-ne\ \'\l\ \ \ \ \ \ \ \ \ \ BEGIN\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$refname\ \=\ \"\'\"\$refname\"\'\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_reflog\ \=\ \"reflog\_\"\ \.\ \(\(\$tmp\ \=\ \$refname\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \l\ \ \ \ \ \ \ \ \ \ if\ \(m\/\^\(\[a\-f0\-9\]\+\)\.\*\@\\\{\\d\+\\\}\:\ \(\.\*\?\)\$\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\$2\;\ \}\l\ \ \ \ \ \ \ \ \ \ elsif\ \(m\/\^\(\[a\-f0\-9\]\+\)\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\"\<lastentry\>\"\;\ \}\l\ \ \ \ \ \ \ \ \ \ \$id\_short\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$id\_any\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \-\>\ \_\$id\_short\ \[color\=gray90\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \l\ \ \ \ \ \ \ \ \ \ s\/\^\[a\-f0\-9\]\+\/\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ strip\ sha1\;\ \$id\_short\ will\ be\ used\ instead\l\ \ \ \ \ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$id\_short\ \.\ \$\_\;\l\ \ \ \ \ \ \ \ \ \ \l\ \ \ \ \ \ \ \ \ \ END\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \$trailing\ \=\ \(substr\(\$content\,\-2\)\ eq\ \"\\\\l\"\)\ \?\ \"\"\ \:\ \"\\\\l\"\;\ \l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \[color\=gray90\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{reflog\|logs\/\$refname\}\|\$content\$trailing\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\'\ \l\ \ \ \ \ \ fi\l\ \ \ \ firstiter\=\"\"\ \#\ empty\ stringt\,\ i\.e\.\ false\l\ \ done\l\}\l\lprint\_dot\_index\(\)\ \{\l\ \ git\ ls\-files\ \-\-stage\ \-\-abbrev\=\$sha1length\ \|\ perl\ \-ne\ \'\l\ \ \ \ if\ \(\/\^\[0\-9\]\+\\s\+\(\[a\-f0\-9\]\+\)\/\)\ \{\l\ \ \ \ \ \ print\ \"\ \ index\ \-\>\ \_\$1\\n\"\;\l\l\ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\r\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$\_\;\l\ \ \ \ \}\l\ \ \ \ END\ \{\l\ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \}\l\ \ \ \ \ \ print\ \"\ \ index\ \[style\=filled\,\ fillcolor\=lightcyan\,\ \"\ \.\l\ \ \ \ \ \ \ \ \"label\=\\\"\{\{index\}\|\$content\}\\\"\]\\n\"\;\l\ \ \ \ \}\'\l\}\l\lprint\_dot\_workingtree\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ \#\!\/usr\/bin\/perl\ \-w\l\ \ \ \ \#\ todo\:\ more\ portable\ by\ not\ relying\ on\ literal\ path\ componenents\ such\ as\ \"\.\"\,\l\ \ \ \ \#\ \"\.\.\"\ and\ \"\/\"\.\l\ \ \ \ use\ strict\;\l\ \ \ \ our\ \%isFqNameIgnored\;\l\ \ \ \ our\ \%isRelNameIgnored\;\l\ \ \ \ \l\ \ \ \ sub\ print\_dot\_for\_dir\ \{\l\ \ \ \ \ \ \ \ my\ \(\$fqParentDirName\,\ \$fqParentDirNameDotId\,\ \$fqParentDirNameQuoted\,\ \$level\)\ \=\ \@\_\;\l\ \ \ \ \ \ \ \ if\ \(\$level\ \>\=\ 2\)\ \{\ print\ \"level\ exeeded\\n\"\;\ return\;\ \}\l\ \ \ \ \l\ \ \ \ \ \ \ \ my\ \$parentDirContentQuoted\ \=\ \"\"\;\l\ \ \ \ \l\ \ \ \ \ \ \ \ opendir\(DIR\,\ \$fqParentDirName\)\ or\ die\ \"cant\ open\ dir\ \$fqParentDirName\ for\ reading\\n\"\;\l\ \ \ \ \ \ \ \ foreach\ my\ \$relFileName\ \(readdir\(DIR\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileName\ \=\ \"\$fqParentDirName\/\$relFileName\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$isFqNameIgnored\{\$fqFileName\}\ or\ \$isRelNameIgnored\{\$relFileName\}\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(not\ \(\-f\ \"\$fqFileName\"\ or\ \-d\ \"\$fqFileName\"\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$fqFileNameDotId\ \=\ \$fqFileName\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \-\>\ \$fqFileNameDotId\\n\"\;\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$relFileNameQuoted\ \=\ \$relFileName\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \$parentDirContentQuoted\ \.\ \$relFileNameQuoted\ \.\ \"\\\\l\"\;\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$sep\ \=\ \$fqParentDirNameQuoted\ \?\ \"\\\\\/\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileNameQuoted\ \=\ \$fqParentDirNameQuoted\ \.\ \$sep\ \.\ \$relFileNameQuoted\;\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\-f\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ local\ \$\/\ \=\ undef\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ open\ FILE\,\ \$fqFileName\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ my\ \$content\ \=\ \<FILE\>\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ close\ FILE\;\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$contentQuoted\ \=\ \$content\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\~\ s\/\(\\r\?\\n\)\/\\\\l\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$contentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqFileNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:file\|\$fqFileNameQuoted\}\|\$contentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \l\ \ \ \ \ \ \ \ \ \ \ \ elsif\ \(\-d\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\_dot\_for\_dir\(\"\$fqFileName\"\,\ \"\$fqFileNameDotId\"\,\ \"\$fqFileNameQuoted\"\,\ \$level\ \+\ 1\)\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \l\ \ \ \ \ \ \ \ my\ \$fqParentDirNameQuotedDisplay\ \=\l\ \ \ \ \ \ \ \ \ \ \$fqParentDirNameQuoted\ eq\ \"\"\ \?\ \"\\\\\<root\\\\\>\"\ \:\ \$fqParentDirNameQuoted\;\l\ \ \ \ \ \ \ \ if\ \(\$parentDirContentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:dir\|\$fqParentDirNameQuotedDisplay\}\|\$parentDirContentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \}\l\ \ \ \ \l\ \ \ \ my\ \@ignoredFqNames\ \=\ split\(\l\ \ \ \ \ \ \ \ \/\\r\?\\n\/\,\l\ \ \ \ \ \ \ \ \`git\ ls\-files\ \-\-others\ \-i\ \-\-exclude\-standard\ \-\-exclude\ \"\/git\-draw\*\"\`\)\;\l\ \ \ \ foreach\ \(\@ignoredFqNames\)\ \{\l\ \ \ \ \ \ \ \ \$isFqNameIgnored\{\"\$ARGV\[0\]\/\$\_\"\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ foreach\ \(\"\.\"\,\ \"\.\.\"\,\ \"\.git\"\)\ \{\l\ \ \ \ \ \ \ \ \$isRelNameIgnored\{\$\_\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ print\_dot\_for\_dir\(\$ARGV\[0\]\,\ \"workingtree\_root\"\,\ \"\"\,\ 0\)\;\l\ \ \ \ \'\ \"\$GIT\_WORK\_TREE\"\l\}\l\lprint\_dot\(\)\ \{\ \l\ \ echo\ \"digraph\ structs\ \{\"\l\ \ echo\ \"\ \ node\ \[shape\=record\,fontsize\=11\]\;\"\l\ \ echo\ \"\ \ rankdir\=\\\"\$orientation\\\"\;\"\l\l\ \ if\ \[\ \"\$title\"\ \]\;\ then\l\ \ \ \ echo\ \"\ \ labelloc\=\\\"t\\\"\"\l\ \ \ \ titlequoted\=\$\(perl\ \-e\ \'\$ARGV\[0\]\=\~s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ print\ \$ARGV\[0\]\'\ \"\$title\"\)\l\ \ \ \ echo\ \"\ \ label\=\\\"\$titlequoted\\\"\"\l\ \ fi\l\l\ \ if\ \[\ \$showlegend\ \=\ 1\ \]\;\ then\l\ \ \ \ echo\ \"\ \ subgraph\ cluster\_0\ \{\"\l\ \ \ \ echo\ \"\ \ \ \ color\=gray80\;\"\l\ \ \ \ echo\ \"\ \ \ \ label\ \=\ \\\"legend\\\\l\\\"\;\"\l\ \ \ \ echo\ \"\ \ \ \ legend\_node\ \[label\=\\\"\{\{type\:subtype\|id\/name\}\|content\\\\l\|metadata\ from\ config\\\\l\}\\\"\]\"\l\ \ \ \ echo\ \"\ \ \}\"\l\ \ fi\l\ \ if\ \[\ \$showobjects\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_objects\l\ \ fi\l\ \ if\ \[\ \$showrefs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_references\l\ \ fi\l\ \ if\ \[\ \$showreflogs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_ref\_logs\l\ \ fi\l\ \ if\ \[\ \$showindex\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_index\l\ \ fi\l\ \ if\ \[\ \$showworkingtree\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_workingtree\l\ \ fi\l\ \ echo\ \"\}\"\l\}\l\l\#\ process\ options\lwhile\ test\ \$\#\ \-gt\ 0\ldo\l\ \ case\ \$1\ in\l\l\ \ \ \ \-h\ \|\ \-\-help\)\l\ \ \ \ \ \ print\_usage\_and\_exit\ 0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-p\ \|\ \-\-print\-only\)\l\ \ \ \ \ \ print\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-i\ \|\ \-\-image\-only\)\l\ \ \ \ \ \ image\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-g\ \|\ \-\-git\-dir\)\l\ \ \ \ \ \ GIT\_DIR\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-w\ \|\ \-\-work\-dir\)\l\ \ \ \ \ \ GIT\_WORK\_TREE\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-dot\-filename\)\l\ \ \ \ \ \ dotfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-image\-filename\)\l\ \ \ \ \ \ imgfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-display\-cmd\)\l\ \ \ \ \ \ displaycmd\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-sha1\-length\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\=\~m\/\\D\/\ \|\|\ \$ARGV\[0\]\<4\ \|\|\ \$ARGV\[0\]\>40\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \-\-sha1\-lenght\ must\ be\ a\ number\ between\ 4\ and\ 40\ inclusive\.\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ sha1length\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-legend\)\l\ \ \ \ \ \ showlegend\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-objects\)\l\ \ \ \ \ \ showobjects\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-commitcontent\)\l\ \ \ \ \ \ showcommitcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-tagcontent\)\l\ \ \ \ \ \ showtagcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-treecontent\)\l\ \ \ \ \ \ showtreecontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-blobcontent\)\l\ \ \ \ \ \ showblobcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-refs\)\l\ \ \ \ \ \ showrefs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-reflogs\)\l\ \ \ \ \ \ showreflogs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-index\)\l\ \ \ \ \ \ showindex\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-workingtree\)\l\ \ \ \ \ \ workingtree\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-scheme\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(default\|set312\|spectral11\|blues9\|\l\ \ \ \ \ \ \ \ \ \ brbg11\|bupu9\|dark28\|paired12\|pastel19\|set19\)\$\/x\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ color\ scheme\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ colorscheme\=\$2\l\ \ \ \ \ \ color\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\l\ \ \ \ \ \ color\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\l\ \ \ \ \ \ color\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\l\ \ \ \ \ \ color\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\l\ \ \ \ \ \ color\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-\*\)\l\ \ \ \ \ \ case\ \"\$1\"\ in\l\ \ \ \ \ \ \-\-color\-commit\)\ color\_commit\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tag\)\ color\_tag\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tree\)\ color\_tree\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-blob\)\ color\_blob\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-default\)\ color\_default\=\$2\;\;\l\ \ \ \ \ \ \*\)\ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\;\l\ \ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\;\;\l\ \ \ \ \ \ esac\l\ \ \ \ \ \ \#\ prevent\ the\ case\ that\ the\ user\ supplied\ color\ can\ have\ special\ meaning\l\ \ \ \ \ \ \#\ in\ the\ dot\ script\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \=\~\ m\/\\\\\|\"\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \$1\ cannot\ contain\ \\\\\ or\ \\\"\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-orientation\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(TB\|BT\|LR\|RL\)\$\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ orientation\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ orientation\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-title\)\l\ \ \ \ \ \ title\=\"\$2\"\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-\*\ \|\ \-\?\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \#\ Split\ apart\ combined\ short\ options\l\ \ \ \ \-\*\)\l\ \ \ \ \ \ split\=\$1\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ set\ \-\-\ \$\(echo\ \"\$split\"\ \|\ cut\ \-c\ 2\-\ \|\ sed\ \'s\/\.\/\-\&\ \/g\'\)\ \"\$\@\"\l\ \ \ \ \ \ continue\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \*\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ only\ options\ are\ accepted\,\ no\ further\ arguments\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\ \ esac\l\l\ \ shift\ldone\l\l\#\ check\ that\ image\_only\ \&\ print\_only\ aren\'t\ both\ selected\lif\ \[\ \"\$image\_only\"\ \-a\ \"\$print\_only\"\ \]\;\ then\l\ \ echo\ \"ERROR\:\ \-\-image\_only\ and\ \-\-print\_only\ are\ mutualy\ exclusive\ options\"\ \>\&2\l\ \ print\_usage\_and\_exit\ 1\ \>\&2\lfi\l\l\#\ check\ preconditions\lif\ \[\ \!\ \-d\ \"\$GIT\_DIR\"\/objects\ \]\;\ then\l\ \ echo\ \"Not\ a\ git\ repository\"\ \>\&2\l\ \ exit\ 1\lfi\lif\ \!\ which\ perl\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lperl\ not\ found\.\ If\ you\ have\ apt\-get\,\ you\ can\ install\ it\ with\ \'sudo\ apt\-get\linstall\ perl\'\.\lEOF\l\ \ exit\ 1\lfi\l\l\#\ generate\ \.dot\ file\lif\ \[\ \"\$print\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ print\_dot\l\ \ exit\ 0\lfi\lprint\_dot\ \>\"\$dotfilename\"\ \|\|\ exit\ 1\l\l\#\ build\ and\ image\ out\ of\ the\ \.dot\ file\lif\ \!\ which\ dot\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\ldot\ \(part\ of\ graphviz\)\ not\ found\.\ Either\ use\ the\ \-\-print\-only\ option\,\ or\linstall\ graphviz\.\ If\ you\ have\ apt\-get\,\ you\ can\ do\ that\ with\ \'sudo\ apt\-get\linstall\ graphviz\'\.\lEOF\l\ \ exit\ 1\lfi\ldot\ \-Tpng\ \"\$dotfilename\"\ \>\ \"\$imgfilename\"\ \|\|\ exit\ 1\l\l\#\ display\ image\lif\ \[\ \"\$image\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ exit\ 0\lfi\l\lif\ \!\ which\ \"\$displaycmd\"\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lCommand\ to\ display\ image\ not\ found\ \(\$displaycmd\)\.\lAn\ image\ was\ generated\,\ but\ I\ cannot\ display\ it\.\ You\ might\ want\ to\ make\ use\lthe\ \-\-image\-only\ or\ the\ \-\-display\-cmd\ \<command\>\ option\.\lEOF\l\ \ if\ \[\ \"\$displaycmd\"\ \=\ \"display\"\ \]\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lIf\ you\ have\ apt\-get\,\ you\ can\ install\ the\ command\ \'display\'\ \(part\ of\limagemagick\)\ with\ \'sudo\ apt\-get\ install\ imagemagick\'\.\lEOF\l\ \ fi\l\ \ exit\ 1\lfi\l\"\$displaycmd\"\ \"\$imgfilename\"\l}"]  _00ee [fillcolor="palegreen1", style="filled,rounded", label="{{obj:commit|00ee}|tree\ caf0\lauthor\ sam\ \<sam\@freighttrust\.com\>\ 1617233638\ \-0700\lcommitter\ sam\ \<sam\@freighttrust\.com\>\ 1617233638\ \-0700\l\lfeat\(v1\.0\.0\)\:\ release\l}"]  _00ee -> _caf0
  _0f6f [fillcolor="palegreen1", style="filled,rounded", label="{{obj:commit|0f6f}|tree\ c067\lparent\ 00ee\lauthor\ sam\ \<sam\@freighttrust\.com\>\ 1617233650\ \-0700\lcommitter\ sam\ \<sam\@freighttrust\.com\>\ 1617233650\ \-0700\l\lfix\(lint\)\:\ format\l}"]  _0f6f -> _c067
  _0f6f -> _00ee
  _db71 [fillcolor="white", style="filled,rounded", label="{{obj:blob|db71}|git\-draw\ text\ eol\=lf\l\*\.sh\ text\ eol\=lf\l}"]  _b04a [fillcolor="white", style="filled,rounded", label="{{obj:blob|b04a}|\#\ \@file\ devops\ editorconfig\l\#\ \@info\ conformant\ editorconfig\l\lroot\ \=\ true\l\l\#\ defaults\l\[\*\]\lcharset\ \=\ utf\-8\lend\_of\_line\ \=\ lf\linsert\_final\_newline\ \=\ true\ltrim\_trailing\_whitespace\ \=\ true\l\l\#\ JavaScript\,\ JSON\,\ JSX\,\ JavaScript\ Modules\,\ TypeScript\l\#\ https\:\/\/github\.com\/feross\/standard\l\#\ https\:\/\/prettier\.io\l\[\*\.\{cjs\,js\,json\,jsx\,mjs\,ts\,tsx\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ HTML\l\#\ https\:\/\/google\.github\.io\/styleguide\/htmlcssguide\.xml\#General\_Formatting\_Rules\l\[\*\.\{htm\,html\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\ltrim\_trailing\_whitespace\ \=\ true\l\#\ TOML\l\#\ https\:\/\/github\.com\/toml\-lang\/toml\/tree\/master\/examples\l\[\*\.toml\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ YAML\l\#\ http\:\/\/yaml\.org\/spec\/1\.2\/2009\-07\-21\/spec\.html\#id2576668\l\[\*\.\{yaml\,yml\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ Shell\l\#\ https\:\/\/google\.github\.io\/styleguide\/shell\.xml\#Indentation\l\[\*\.\{bash\,sh\,zsh\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ confg\ \+\ cfg\l\[\*\.\{conf\,cfg\}\]\lcharset\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ UTF\-8\lend\_of\_line\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ LF\lindent\_size\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 4\lindent\_style\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ tab\linsert\_final\_newline\ \ \ \ \ \ \ \ \=\ true\ltab\_width\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 4\ltrim\_trailing\_whitespace\ \ \ \ \=\ true\l\l\[Makefile\]\lindent\_style\ \=\ tab\l}"]  _c3df [fillcolor="white", style="filled,rounded", label="{{obj:blob|c3df}|\#\!\/bin\/bash\l\#SPDX\-License\-Identifier\:\ GPL\-3\.0\l\#\ NAME\l\#\ \ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\#\l\#\ SYNOPSIS\l\#\ \ \ git\-draw\ \[OPTION\]\.\.\.\l\#\l\#\ PREREQUISITES\l\#\ \ \ You\ don\'t\ need\ graphviz\ or\ imagemagick\ if\ you\ use\ git\-draw\ with\ certain\l\#\ \ \ options\.\l\#\l\#\ \ \ \-\ perl\l\#\ \ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\#\ \ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\#\l\#\ \ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\#\l\#\ \ \ \ \ sudo\ apt\-get\ install\ perl\ graphviz\ imagemagick\l\#\l\#\ DESCRIPTION\l\#\ \ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\l\#\ \ \ for\ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\#\l\#\ \ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\#\ \ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\#\ \ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\#\l\#\ \ \ As\ long\ as\ you\ run\ git\-draw\ from\ within\ a\ git\ repository\,\ it\ will\ graph\l\#\ \ \ the\ repository\.\ \ \ An\ alternate\ git\ repository\ can\ be\ chosen\ using\ the\l\#\ \ \ \-\-git\-dir\ and\/or\ \-\-work\-dir\ flags\.\l\#\l\#\ \ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\#\ \ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\#\ \ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\#\ \ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\#\ \ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\#\ \ \ references\ aka\ pointers\ and\ graphs\.\l\#\l\#\ OPTIONS\l\#\ \ \ \-h\,\ \-\-help\l\#\ \ \ \ \ Prints\ a\ help\ message\ and\ exits\.\l\#\l\#\ \ \ \-p\,\ \-\-print\-only\l\#\ \ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\l\#\ \ \ \ \ \-\-image\-only\.\l\#\l\#\ \ \ \-i\,\ \-\-image\-only\l\#\ \ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\l\#\ \ \ \ \ Mutually\ exclusive\ with\ \-\-print\-only\.\l\#\l\#\ \ \ \-g\,\ \-\-git\-dir\l\#\ \ \ \ \ Git\ repository\ directory\ to\ use\l\#\l\#\ \ \ \-w\,\ \-\-work\-dir\l\#\ \ \ \ \ Top\ level\ git\ working\ directory\l\#\l\#\ \ \ \-\-dot\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\#\l\#\ \ \ \-\-image\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\#\l\#\ \ \ \-\-display\-cmd\ \<command\>\l\#\ \ \ \ \ Command\ to\ use\ to\ display\ image\l\#\l\#\ \ \ \-\-sha1\-length\ \<length\>\l\#\ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\ in\ the\ graph\.\ Must\ be\ a\ number\ between\l\#\ \ \ \ \ 4\ and\ 40\ inclusive\.\l\#\l\#\ \ \ \-\-hide\-legend\l\#\ \ \ \ \ Don\'t\ display\ the\ legend\l\#\l\#\ \ \ \-\-hide\-objects\l\#\ \ \ \ \ Don\'t\ display\ git\ objects\l\#\l\#\ \ \ \-\-hide\-refs\l\#\ \ \ \ \ Don\'t\ display\ references\l\#\l\#\ \ \ \-\-hide\-reflogs\l\#\ \ \ \ \ Don\'t\ display\ reflogs\l\#\l\#\ \ \ \-\-hide\-index\l\#\ \ \ \ \ Don\'t\ display\ the\ index\l\#\l\#\ \ \ \-\-hide\-workingtree\l\#\ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\#\l\#\ \ \ \-\-hide\-commitcontent\l\#\ \ \ \ \ Hide\ commit\ content\l\#\l\#\ \ \ \-\-hide\-tagcontent\l\#\ \ \ \ \ Hide\ tag\ content\l\#\l\#\ \ \ \-\-hide\-treecontent\l\#\ \ \ \ \ Hide\ tree\ content\l\#\l\#\ \ \ \-\-hide\-blobcontent\l\#\ \ \ \ \ Hide\ blob\ content\l\#\l\#\ \ \ \-\-color\-scheme\ \<color\ scheme\>\l\#\ \ \ \ \ Choose\ color\ scheme\.\ \<color\ scheme\>\ can\ be\ one\ of\:\ default\,\ set312\,\l\#\ \ \ \ \ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\ dark28\,\ paired12\,\ pastel19\,\ set19\l\#\l\#\ \ \ \-\-color\-commit\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ commit\ objects\l\#\l\#\ \ \ \-\-color\-tag\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tag\ objects\l\#\l\#\ \ \ \-\-color\-tree\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tree\ objects\l\#\l\#\ \ \ \-\-color\-blob\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ blob\ objects\l\#\l\#\ \ \ \-\-color\-default\ \<color\>\l\#\ \ \ \ \ Set\ default\ color\l\#\l\#\ \ \ \-\-orientation\ \<orientation\>\l\#\ \ \ \ \ Change\ the\ layout\ orientation\ of\ the\ graph\.\ Must\ be\ one\ of\ the\l\#\ \ \ \ \ following\:\l\#\ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\#\ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\#\ \ \ \ \ \ \ LR\ \ left\ to\ right\l\#\ \ \ \ \ \ \ RL\ \ right\ to\ left\l\#\l\#\ \ \ \-\-title\ \<text\>\l\#\ \ \ \ \ Adds\ the\ given\ text\ as\ title\ to\ the\ drawing\l\#\l\#\ AUTHOR\l\#\ \ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\#\ \ \ Modifications\ by\ Nathan\ Doss\ \<nathan\.doss\@gmail\.com\>\l\#\l\#\ COPYRIGHT\l\#\ \ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\#\ \ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\#\ \ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\l\#\ \ \ by\ law\.\l\#\l\#\ SEE\ ALSO\l\#\ \ \ git\(1\)\l\l\#\ define\ color\ schemes\lcolor\_scheme\_default\_commit\=\"palegreen1\"\lcolor\_scheme\_default\_tree\=\"lightyellow\"\lcolor\_scheme\_default\_blob\=\"white\"\lcolor\_scheme\_default\_tag\=\"white\"\lcolor\_scheme\_default\_default\=\"white\"\l\lcolor\_scheme\_set312\_commit\=\"\/set312\/7\"\lcolor\_scheme\_set312\_tree\=\"\/set312\/6\"\lcolor\_scheme\_set312\_blob\=\"\/set312\/3\"\lcolor\_scheme\_set312\_tag\=\"\/set312\/12\"\lcolor\_scheme\_set312\_default\=\"white\"\l\lcolor\_scheme\_spectral11\_commit\=\"\/spectral11\/8\"\lcolor\_scheme\_spectral11\_tree\=\"\/spectral11\/4\"\lcolor\_scheme\_spectral11\_blob\=\"\/spectral11\/10\"\lcolor\_scheme\_spectral11\_tag\=\"\/spectral11\/5\"\lcolor\_scheme\_spectral11\_default\=\"white\"\l\lcolor\_scheme\_blues9\_commit\=\"\/blues9\/3\"\lcolor\_scheme\_blues9\_tree\=\"\/blues9\/5\"\lcolor\_scheme\_blues9\_blob\=\"\/blues9\/7\"\lcolor\_scheme\_blues9\_tag\=\"\/blues9\/2\"\lcolor\_scheme\_blues9\_default\=\"white\"\l\lcolor\_scheme\_brbg11\_commit\=\"\/brbg11\/3\"\lcolor\_scheme\_brbg11\_tree\=\"\/brbg11\/5\"\lcolor\_scheme\_brbg11\_blob\=\"\/brbg11\/7\"\lcolor\_scheme\_brbg11\_tag\=\"\/brbg11\/9\"\lcolor\_scheme\_brbg11\_default\=\"white\"\l\lcolor\_scheme\_bupu9\_commit\=\"\/bupu9\/2\"\lcolor\_scheme\_bupu9\_tree\=\"\/bupu9\/4\"\lcolor\_scheme\_bupu9\_blob\=\"\/bupu9\/6\"\lcolor\_scheme\_bupu9\_tag\=\"\/bupu9\/8\"\lcolor\_scheme\_bupu9\_default\=\"white\"\l\lcolor\_scheme\_dark28\_commit\=\"\/dark28\/5\"\lcolor\_scheme\_dark28\_tree\=\"\/dark28\/2\"\lcolor\_scheme\_dark28\_blob\=\"\/dark28\/3\"\lcolor\_scheme\_dark28\_tag\=\"\/dark28\/6\"\lcolor\_scheme\_dark28\_default\=\"white\"\l\lcolor\_scheme\_paired12\_commit\=\"\/paired12\/3\"\lcolor\_scheme\_paired12\_tree\=\"\/paired12\/1\"\lcolor\_scheme\_paired12\_blob\=\"\/paired12\/7\"\lcolor\_scheme\_paired12\_tag\=\"\/paired12\/11\"\lcolor\_scheme\_paired12\_default\=\"white\"\l\lcolor\_scheme\_pastel19\_commit\=\"\/pastel19\/3\"\lcolor\_scheme\_pastel19\_tree\=\"\/pastel19\/5\"\lcolor\_scheme\_pastel19\_blob\=\"\/pastel19\/4\"\lcolor\_scheme\_pastel19\_tag\=\"\/pastel19\/6\"\lcolor\_scheme\_pastel19\_default\=\"white\"\l\lcolor\_scheme\_set19\_commit\=\"\/set19\/3\"\lcolor\_scheme\_set19\_tree\=\"\/set19\/5\"\lcolor\_scheme\_set19\_blob\=\"\/set19\/2\"\lcolor\_scheme\_set19\_tag\=\"\/set19\/6\"\lcolor\_scheme\_set19\_default\=\"white\"\l\lexport\ GIT\_DIR\=\$\(git\ rev\-parse\ \-\-git\-dir\)\lexport\ GIT\_WORK\_TREE\=\$\(git\ rev\-parse\ \-\-show\-toplevel\)\l\lmake\_imgfilename\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ opendir\(DIR\,\$ARGV\[0\]\)\;\l\ \ \ \ foreach\(readdir\(DIR\)\)\ \{\l\	\	\ \ if\ \(\ m\/git\-draw\(\\d\+\)\.png\/\ \)\ \{\l\ \ \ \ \ \ \ \ if\ \(\ \$1\ \>\ \$max\ \)\ \{\ \$max\ \=\ \$1\ \}\;\l\ \ \ \ \ \ \}\l\ \ \ \ \}\l\ \ \ \ print\ \"git\-draw\"\ \.\ \(\$max\+1\)\ \.\ \"\.png\"\'\ \"\$GIT\_WORK\_TREE\"\l\}\l\l\#\ set\ defaults\ldotfilename\=git\-draw\.dot\limgfilename\=\$\(make\_imgfilename\)\ldisplaycmd\=display\lsha1length\=4\lshowlegend\=1\lshowobjects\=1\lshowrefs\=1\lshowreflogs\=1\lshowindex\=1\lshowworkingtree\=1\lshowcommitcontent\=1\lshowtreecontent\=1\lshowtagcontent\=1\lshowblobcontent\=1\lorientation\=\"TB\"\ltitle\=\lcolorscheme\=\"default\"\l\l\#\ set\ colors\ \(hack\ \.\.\.\ got\ to\ be\ a\ better\ way\)\lcolor\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\lcolor\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\lcolor\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\lcolor\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\lcolor\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\l\#\ \$1\ \=\ exit\ code\lprint\_usage\_and\_exit\(\)\ \{\l\ \ cat\ \<\<EOF\lUsage\:\ git\-draw\ \[options\]\l\ \ \-h\|\-\-help\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Print\ help\ message\ \&\ exit\l\ \ \-p\|\-\-print\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ print\ \.dot\ to\ stdout\l\ \ \-i\|\-\-image\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ create\ an\ image\,\ and\ a\ \.dot\ file\ beforehand\l\ \ \-g\|\-\-git\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Git\ repository\ directory\ to\ use\l\ \ \-w\|\-\-work\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Top\ level\ git\ working\ directory\l\ \ \-\-dot\-filename\ \<filename\>\ \ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\ \ \-\-image\-filename\ \<filename\>\ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\ \ \-\-display\-cmd\ \<command\>\ \ \ \ \ \ \ \ Command\ to\ use\ to\ display\ image\l\ \ \-\-sha1\-length\ \<length\>\ \ \ \ \ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\l\ \ \-\-hide\-legend\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ legend\l\ \ \-\-hide\-objects\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ git\ objects\l\ \ \-\-hide\-refs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ references\l\ \ \-\-hide\-reflogs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ reflogs\l\ \ \-\-hide\-index\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ index\l\ \ \-\-hide\-workingtree\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\ \ \-\-hide\-commitcontent\ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ commit\ content\l\ \ \-\-hide\-tagcontent\ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tag\ content\l\ \ \-\-hide\-treecontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tree\ content\l\ \ \-\-hide\-blobcontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ blob\ content\l\ \ \-\-color\-scheme\ \<color\ scheme\>\ \ Choose\ color\ scheme\.\ Can\ be\ one\ of\:\ default\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ set312\,\ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dark28\,\ paired12\,\ pastel19\,\ set19\l\ \ \-\-color\-commit\ \<color\>\ \ \ \ \ \ \ \ \ Set\ color\ for\ commit\ objects\l\ \ \-\-color\-tag\ \<color\>\ \ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tag\ objects\l\ \ \-\-color\-tree\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tree\ objects\l\ \ \-\-color\-blob\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ blob\ objects\l\ \ \-\-color\-default\ \<color\>\ \ \ \ \ \ \ \ Set\ default\ color\l\ \ \-\-orientation\ \<orientation\>\ \ \ \ Change\ the\ graph\ orientation\.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<orientation\>\ must\ be\ one\ of\ the\ following\:\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LR\ \ left\ to\ right\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ RL\ \ right\ to\ left\l\ \ \-\-title\ \<text\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Add\ \<text\>\ as\ title\ to\ the\ drawing\l\lThe\ primary\ documentation\ is\ at\ the\ top\ of\ the\ git\-draw\ script\ itself\.\lEOF\l\ \ exit\ \"\$1\"\l\}\l\l\#\ TODO\l\#\ \ \ \-\ \ Layout\ graph\ so\ commit\ DAG\ is\ top\-down\ and\ on\ the\ left\,\ probably\ using\l\#\ \ \ \ \ \ graphviz\'s\ ranks\.\l\#\ \ \ \-\ \ Optionally\ use\ temporary\ files\ which\ the\ user\ does\ not\ directly\ see\l\#\ \ \ \-\ \ Optionally\ omit\ drawing\ the\ content\ of\ all\/certain\ objects\/refs\ so\ a\l\#\ \ \ \ \ \ bit\ larger\ than\ tiny\ repositories\ still\ draw\ usefully\.\l\#\ \ \ \-\ \ tree\ objects\ \/\ reflogs\ shall\ fan\ out\ graph\ edges\ at\ corresponding\ line\l\#\ \ \ \ \ \ in\ content\l\#\ \ \ \-\ \ Amend\ type\ cell\ \(top\ left\)\ and\ id\ cell\ \(top\ right\)\ with\ the\ prefix\l\#\ \ \ \ \ \ \'type\=\'\ and\ \'id\=\'\ to\ be\ very\ clear\.\ Optionally\ turn\ off\ with\ options\.\l\#\ \ \ \-\ \ Provide\ options\ to\ choose\ the\ tool\ to\ display\ the\ image\ outputted\ by\l\#\ \ \ \ \ \ dot\.\l\#\ \ \ \-\ \ Read\ gitrepository\-layou\(1\)\ to\ find\ out\ more\ things\ which\ could\ be\l\#\ \ \ \ \ \ displayed\l\#\ \ \ \-\ \ Draw\ multiple\ repos\ in\ one\ image\.\ Usefull\ to\ demonstrate\ distributed\ git\.\l\#\ \ \ \-\ \ Draw\ packed\ objects\ and\ refs\ in\ a\ subgraph\ respectively\.\l\#\ \ \ \-\ \ Allow\ that\ the\ current\ working\ directory\ can\ be\ any\ subdirectory\ of\ a\l\#\ \ \ \ \ \ git\ project\.\ Similarly\,\ allow\ to\ specify\ the\ git\ repository\ via\ command\l\#\ \ \ \ \ \ line\ arguments\.\l\labbreviate\_sha1\(\)\ \{\l\ \ \#\ BUG\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\ replace\ what\ looks\ like\ a\ sha1\l\ \ perl\ \-pe\ \'s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\'\l\}\l\lls\_all\_objects\(\)\ \{\l\ \ \#\ unpacked\ objects\l\ \ find\ \"\$GIT\_DIR\"\/objects\/\ \-type\ f\ \|\l\ \ \ \ perl\ \-ne\ \'print\ \"\$1\$2\\n\"\ if\ m\@\^\.\*\/\(\[a\-f0\-9\]\{2\}\)\/\(\[a\-f0\-9\]\{38\}\)\@\'\l\l\ \ \#\ packed\ objects\l\ \ \#\ note\ that\ the\ \.idx\ is\ not\ always\ present\l\ \ find\ \"\$GIT\_DIR\"\/objects\/pack\/\ \-iname\ \'\*\.idx\'\ \|\ while\ read\ idxfile\;\ do\l\ \ \ \ cat\ \"\$idxfile\"\ \|\ git\ show\-index\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\[a\-f0\-9\]\{40\}\)\.\*\$\@\$1\@\'\l\ \ done\l\}\l\l\#\ Prints\ all\ references\,\ one\ null\-character\ delimited\ \'line\'\ per\ ref\.\ Each\l\#\ \'line\'\ starts\ with\ the\ name\ of\ the\ ref\,\ followed\ by\ space\,\ followed\ by\ the\l\#\ conent\ of\ the\ ref\,\ which\ can\ consist\ of\ any\ characters\,\ most\ notably\l\#\ newlines\.\lls\_all\_refs\(\)\ \{\l\ \ \#\ print\ all\ normal\ refs\.\ \'git\ show\-ref\'\ prints\ referee\ and\ ref\ name\ in\ the\l\ \ \#\ wrong\ order\ for\ our\ purpose\,\ so\ swap\ the\ order\l\ \ git\ show\-ref\ \|\l\ \ \ \ perl\ \-pe\ \'chomp\;\ s\/\^\(\\S\+\)\\s\*\(\\S\*\)\$\/\$2\ \$1\\0\/\'\l\l\ \ \#\ print\ HEAD\ and\ all\ special\ refs\l\ \ for\ special\_ref\ in\ \.git\/\*HEAD\ \;\ do\l\ \ \ \ printf\ \"\%s\"\ \"\$\(basename\ \"\$special\_ref\"\)\ \"\l\ \ \ \ cat\ \"\$special\_ref\"\l\ \ \ \ printf\ \"\\0\"\l\ \ done\l\}\l\lls\_all\_objects\_short\(\)\ \{\l\ \ ls\_all\_objects\ \|\ while\ read\ sha1\;\ do\l\ \ \ \ git\ rev\-parse\ \-\-short\=\$sha1length\ \"\$sha1\"\l\ \ done\l\}\l\lprint\_dot\_objects\(\)\ \{\l\ \ ls\_all\_objects\_short\ \|\ while\ read\ id\;\ do\l\ \ \ \ dotid\=\"\_\$id\"\l\ \ \ \ object\_type\=\$\(git\ cat\-file\ \-t\ \"\$id\"\)\l\ \ \ \ objcontent\=\$\(git\ cat\-file\ \-p\ \"\$id\"\ \|\ abbreviate\_sha1\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\'\)\l\l\ \ \ \ case\ \$object\_type\ in\l\ \ \ \ commit\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_commit\"\l\ \ \ \ \ \ if\ \[\ \$showcommitcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tag\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tag\"\l\ \ \ \ \ \ if\ \[\ \$showtagcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tree\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tree\"\l\ \ \ \ \ \ if\ \[\ \$showtreecontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ blob\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_blob\"\l\ \ \ \ \ \ if\ \[\ \$showblobcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ \*\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_default\"\l\ \ \ \ \ \ \;\;\l\ \ \ \ esac\l\l\ \ \ \ printf\ \%s\ \"\ \ \$dotid\ \[fillcolor\=\\\"\$fillcolor\\\"\,\ style\=\\\"filled\,rounded\\\"\,\ \"\\\l\ \ \ \ \ \ \"label\=\\\"\{\{obj\:\$object\_type\|\$id\}\|\$objcontent\}\\\"\]\"\l\l\ \ \ \ \#\ todo\:\ use\ git\'s\ commands\ to\ extract\ the\ object\ references\l\ \ \ \ \#\ BUG\:\ must\ escape\ stuff\ that\ \.dot\ interprets\ \(\\n\,\\l\,\\l\,\|\,\{\}\,\.\.\.\)\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ cannot\ deal\ with\ multiple\ sha1\ on\ one\ line\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\l\ \ \ \ \#\ \ \ replace\ what\ looks\ like\ a\ sha1\l\ \ \ \ git\ cat\-file\ \-p\ \"\$id\"\ \|\l\ \ \ \ \ \ perl\ \-ne\ \'print\ \"\ \ \'\"\$dotid\"\'\ \-\>\ \_\"\ \.\l\ \ \ \ \ \ \ \ \`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\ if\ \/\(\[a\-f0\-9\]\{40\}\)\/\'\l\ \ done\l\l\ \ \#\ \-\-no\-reflogs\ is\ used\ and\ \-\-cache\ is\ \_not\_\ used\ because\ at\ the\ beginning\,\l\ \ \#\ it\ is\ easier\ to\ teach\ novices\ the\ concept\ of\ unreachable\ objects\ when\ the\l\ \ \#\ index\ and\ the\ reflogs\ are\ ignored\.\ \ In\ the\ tiny\ repositories\ git\-draw\ aims\l\ \ \#\ at\,\ the\ reflog\l\ \ git\ fsck\ \-\-no\-reflogs\ \-\-unreachable\ \-\-dangling\ 2\>\/dev\/null\ \|\l\ \ \ perl\ \-ne\ \'print\ \"\ \ \_\"\ \.\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\ \.\l\ \ \ \ \ \"\ \[style\=\\\"dotted\,rounded\\\"\,\ fontcolor\=gray\,\ color\=gray\]\\n\"\ if\ \/\^\(\?\:dangling\|unreachable\)\\b\.\*\?\(\[a\-f0\-9\]\{40\}\)\/\'\l\}\l\lprint\_dot\_references\(\)\ \{\l\ \ ls\_all\_refs\ \|\l\ \ \ \ perl\ \-ne\ \'\l\ \ \ \ \ \ BEGIN\ \{\ \$\/\ \=\ \"\\0\"\;\ \}\l\ \ \ \ \ \ chomp\;\l\ \ \ \ \ \ if\ \(m\@\^\(\\S\+\)\ \(\.\*\)\@s\)\ \{\ \#\ \$\_\ contains\ newlines\l\ \ \ \ \ \ \ \ \$currentref\ \=\ \$1\;\l\ \ \ \ \ \ \ \ \{\ local\ \$\/\ \=\ \"\\n\"\;\l\ \ \ \ \ \ \ \ \ \ chomp\(\$referee\_lines\ \=\ \$2\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \(\$currentref\_quoted\ \=\ \$currentref\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \$dotid\_currentref\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$currentref\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\l\ \ \ \ \ \ \ \ \#\ determine\ \$reftype\,\ \$fillcolor\,\ \$configmetadata\,\ \$fontcolorelement\l\ \ \ \ \ \ \ \ \$reftype\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"gray\"\;\l\ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \#\ local\ branches\l\ \ \ \ \ \ \ \ if\ \(\$currentref\ \=\~\ m\@\^refs\/heads\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:local\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \(\$currentref\_short\ \=\ \$currentref\)\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \$remote\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.remote\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ \$merge\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.merge\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ \&\&\ \$merge\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ eq\ \"\.\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$merge\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\ \$merge\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_remote\ \=\ \(\(\$tmp\ \=\ \$remote\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_refs\_\_\_remotes\_\_\_\$\{dotid\_remote\}\_\_\_\$\{dotid\_merge\_core\}\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_merge\ \[style\=dotted\,\ color\=gray\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"upstream\ branch\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\ \"remote\ \=\ \$remote\\nmerge\ \=\ \$merge\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\\n\/\\\\l\/g\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\l\ \ \ \ \ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\|\$tmp\"\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ remote\ tracking\ branches\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/remotes\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:remote\ tracking\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"yellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ tags\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/tags\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:tag\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"lightyellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ HEAD\ and\ pseudorefs\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\/\^\[A\-Z0\-9\_\]\*HEAD\$\/\)\ \{\l\ \ \ \ \ \ \ \ \ \ unless\ \(\$currentref\ eq\ \"HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:pseudoref\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ if\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ ORIG\_HEAD\ is\ semantically\ like\ a\ poor\ mans\ reflog\,\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ thus\ same\ colors\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"white\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"color\=gray90\,\ fontcolor\=gray\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"gray30\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"fontcolor\=white\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ outgoing\ edges\ \(to\ the\ referees\)\ of\ current\ reference\l\ \ \ \ \ \ \ \ my\ \$all\_referees\_exist\ \=\ 1\;\l\ \ \ \ \ \ \ \ my\ \@adorned\_quoted\_referees\ \=\ \(\)\;\l\ \ \ \ \ \ \ \ for\ my\ \$referee\_line\ \(split\(\"\\n\"\,\ \$referee\_lines\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \#\ Extract\ referee\ from\ referee\ line\.\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\^\(ref\:\ \)\?\(\\S\+\)\/\;\l\ \ \ \ \ \ \ \ \ \ my\ \$is\_symbolic\_ref\ \=\ \(length\(\$1\)\ \>\ 0\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$is\_symbolic\_ref\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ \$2\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\(\[0\-9a\-f\]\{40\}\)\/\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,\ 0\,\ \-1\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \#\ Actually\ print\ dot\l\ \ \ \ \ \ \ \ \ \ my\ \$adornment\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\_exists\ \=\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(\$referee\ \=\~\ m\/\^\[a\-f0\-9\]\+\$\/\)\ \|\|\ \#\ assume\ object\ with\ a\ sha1\ exists\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(0\ \=\=\ system\(\"git\ show\-ref\ \-\-verify\ \-\-quiet\ \-\-\ \$referee\"\)\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$referee\_exists\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$dotid\_referee\ \=\ \"\_\"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \(\(\$tmp\ \=\ \$referee\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$attribs\ \=\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \?\ \"\[color\=gray90\]\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_referee\ \$attribs\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$all\_referees\_exist\ \=\ 0\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$adornment\ \=\ \"\ \\\\\<does\ not\ exist\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \(\$referee\_line\_quoted\ \=\ \$referee\_line\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\_quoted\ \=\~\l\ \ \ \ \ \ \ \ \ \ \ \ s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\;\l\ \ \ \ \ \ \ \ \ \ push\(\@adorned\_quoted\_referees\,\ \"\$referee\_line\_quoted\$adornment\"\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ my\ \$adorned\_quoted\_referees\ \=\ join\(\"\\\\l\"\,\ \@adorned\_quoted\_referees\)\;\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ node\ representing\ current\ reference\l\ \ \ \ \ \ \ \ if\ \(\!\$all\_referees\_exist\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"red\"\;\l\ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \[\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"style\=filled\,\ fillcolor\=\$fillcolor\,\ \$fontcolorelement\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{ref\$reftype\|\$currentref\_quoted\}\|\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"\$adorned\_quoted\_referees\\\\l\$configmetadata\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \}\'\l\}\l\lprint\_dot\_ref\_logs\(\)\ \{\l\ \ firstiter\=\"non\-empty\-string\"\ \#\ i\.e\.\ true\l\ \ git\ show\-ref\ \-\-abbrev\=\$sha1length\ \|\l\ \ \ \ \#\ The\ following\ code\ depends\ upon\ HEAD\ being\ the\ last\ in\ the\ list\l\ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\\brefs\/\\S\*\)\$\@\$1\@\;\ END\ \{\ print\ \"HEAD\\n\"\;\}\'\ \|\l\ \ \ \ while\ read\ refname\;\ do\l\ \ \ \ \ \ \#\ work\ around\ the\ problem\ that\ \'git\ reflog\ show\ HEAD\'\ results\ in\ an\l\ \ \ \ \ \ \#\ error\ when\ HEAD\ contains\ refs\/heads\/master\ but\ refs\/heads\/master\ does\l\ \ \ \ \ \ \#\ not\ exist\,\ which\ is\ the\ case\ after\ \'git\ init\'\.\l\ \ \ \ \ \ if\ \[\ \!\ \\\(\ \"\$firstiter\"\ \-a\ \\\(\ \"\$refname\"\ \=\ HEAD\ \\\)\ \\\)\ \]\;\ then\l\ \ \ \ \ \ \ \ \#\ 8eb068f\ master\@\{11\}\:\ commit\:\ tempo\-ext\:\ new\ version\l\ \ \ \ \ \ \ \ git\ reflog\ show\ \"\$refname\"\ \|\ perl\ \-ne\ \'\l\ \ \ \ \ \ \ \ \ \ BEGIN\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$refname\ \=\ \"\'\"\$refname\"\'\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_reflog\ \=\ \"reflog\_\"\ \.\ \(\(\$tmp\ \=\ \$refname\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ if\ \(m\/\^\(\[a\-f0\-9\]\+\)\.\*\@\\\{\\d\+\\\}\:\ \(\.\*\?\)\$\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\$2\;\ \}\l\ \ \ \ \ \ \ \ \ \ elsif\ \(m\/\^\(\[a\-f0\-9\]\+\)\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\"\<lastentry\>\"\;\ \}\l\ \ \ \ \ \ \ \ \ \ \$id\_short\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$id\_any\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \-\>\ \_\$id\_short\ \[color\=gray90\]\\n\"\;\l\l\ \ \ \ \ \ \ \ \ \ s\/\^\[a\-f0\-9\]\+\/\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ strip\ sha1\;\ \$id\_short\ will\ be\ used\ instead\l\ \ \ \ \ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$id\_short\ \.\ \$\_\;\l\l\ \ \ \ \ \ \ \ \ \ END\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \$trailing\ \=\ \(substr\(\$content\,\-2\)\ eq\ \"\\\\l\"\)\ \?\ \"\"\ \:\ \"\\\\l\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \[color\=gray90\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{reflog\|logs\/\$refname\}\|\$content\$trailing\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\'\l\ \ \ \ \ \ fi\l\ \ \ \ firstiter\=\"\"\ \#\ empty\ stringt\,\ i\.e\.\ false\l\ \ done\l\}\l\lprint\_dot\_index\(\)\ \{\l\ \ git\ ls\-files\ \-\-stage\ \-\-abbrev\=\$sha1length\ \|\ perl\ \-ne\ \'\l\ \ \ \ if\ \(\/\^\[0\-9\]\+\\s\+\(\[a\-f0\-9\]\+\)\/\)\ \{\l\ \ \ \ \ \ print\ \"\ \ index\ \-\>\ \_\$1\\n\"\;\l\l\ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\r\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$\_\;\l\ \ \ \ \}\l\ \ \ \ END\ \{\l\ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \}\l\ \ \ \ \ \ print\ \"\ \ index\ \[style\=filled\,\ fillcolor\=lightcyan\,\ \"\ \.\l\ \ \ \ \ \ \ \ \"label\=\\\"\{\{index\}\|\$content\}\\\"\]\\n\"\;\l\ \ \ \ \}\'\l\}\l\lprint\_dot\_workingtree\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ \#\!\/usr\/bin\/perl\ \-w\l\ \ \ \ \#\ todo\:\ more\ portable\ by\ not\ relying\ on\ literal\ path\ componenents\ such\ as\ \"\.\"\,\l\ \ \ \ \#\ \"\.\.\"\ and\ \"\/\"\.\l\ \ \ \ use\ strict\;\l\ \ \ \ our\ \%isFqNameIgnored\;\l\ \ \ \ our\ \%isRelNameIgnored\;\l\l\ \ \ \ sub\ print\_dot\_for\_dir\ \{\l\ \ \ \ \ \ \ \ my\ \(\$fqParentDirName\,\ \$fqParentDirNameDotId\,\ \$fqParentDirNameQuoted\,\ \$level\)\ \=\ \@\_\;\l\ \ \ \ \ \ \ \ if\ \(\$level\ \>\=\ 2\)\ \{\ print\ \"level\ exeeded\\n\"\;\ return\;\ \}\l\l\ \ \ \ \ \ \ \ my\ \$parentDirContentQuoted\ \=\ \"\"\;\l\l\ \ \ \ \ \ \ \ opendir\(DIR\,\ \$fqParentDirName\)\ or\ die\ \"cant\ open\ dir\ \$fqParentDirName\ for\ reading\\n\"\;\l\ \ \ \ \ \ \ \ foreach\ my\ \$relFileName\ \(readdir\(DIR\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileName\ \=\ \"\$fqParentDirName\/\$relFileName\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$isFqNameIgnored\{\$fqFileName\}\ or\ \$isRelNameIgnored\{\$relFileName\}\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(not\ \(\-f\ \"\$fqFileName\"\ or\ \-d\ \"\$fqFileName\"\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$fqFileNameDotId\ \=\ \$fqFileName\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \-\>\ \$fqFileNameDotId\\n\"\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$relFileNameQuoted\ \=\ \$relFileName\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \$parentDirContentQuoted\ \.\ \$relFileNameQuoted\ \.\ \"\\\\l\"\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$sep\ \=\ \$fqParentDirNameQuoted\ \?\ \"\\\\\/\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileNameQuoted\ \=\ \$fqParentDirNameQuoted\ \.\ \$sep\ \.\ \$relFileNameQuoted\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\-f\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ local\ \$\/\ \=\ undef\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ open\ FILE\,\ \$fqFileName\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ my\ \$content\ \=\ \<FILE\>\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ close\ FILE\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$contentQuoted\ \=\ \$content\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\~\ s\/\(\\r\?\\n\)\/\\\\l\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$contentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqFileNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:file\|\$fqFileNameQuoted\}\|\$contentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \ \ elsif\ \(\-d\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\_dot\_for\_dir\(\"\$fqFileName\"\,\ \"\$fqFileNameDotId\"\,\ \"\$fqFileNameQuoted\"\,\ \$level\ \+\ 1\)\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ my\ \$fqParentDirNameQuotedDisplay\ \=\l\ \ \ \ \ \ \ \ \ \ \$fqParentDirNameQuoted\ eq\ \"\"\ \?\ \"\\\\\<root\\\\\>\"\ \:\ \$fqParentDirNameQuoted\;\l\ \ \ \ \ \ \ \ if\ \(\$parentDirContentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:dir\|\$fqParentDirNameQuotedDisplay\}\|\$parentDirContentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \}\l\l\ \ \ \ my\ \@ignoredFqNames\ \=\ split\(\l\ \ \ \ \ \ \ \ \/\\r\?\\n\/\,\l\ \ \ \ \ \ \ \ \`git\ ls\-files\ \-\-others\ \-i\ \-\-exclude\-standard\ \-\-exclude\ \"\/git\-draw\*\"\`\)\;\l\ \ \ \ foreach\ \(\@ignoredFqNames\)\ \{\l\ \ \ \ \ \ \ \ \$isFqNameIgnored\{\"\$ARGV\[0\]\/\$\_\"\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ foreach\ \(\"\.\"\,\ \"\.\.\"\,\ \"\.git\"\)\ \{\l\ \ \ \ \ \ \ \ \$isRelNameIgnored\{\$\_\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ print\_dot\_for\_dir\(\$ARGV\[0\]\,\ \"workingtree\_root\"\,\ \"\"\,\ 0\)\;\l\ \ \ \ \'\ \"\$GIT\_WORK\_TREE\"\l\}\l\lprint\_dot\(\)\ \{\l\ \ echo\ \"digraph\ structs\ \{\"\l\ \ echo\ \"\ \ node\ \[shape\=record\,fontsize\=11\]\;\"\l\ \ echo\ \"\ \ rankdir\=\\\"\$orientation\\\"\;\"\l\l\ \ if\ \[\ \"\$title\"\ \]\;\ then\l\ \ \ \ echo\ \"\ \ labelloc\=\\\"t\\\"\"\l\ \ \ \ titlequoted\=\$\(perl\ \-e\ \'\$ARGV\[0\]\=\~s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ print\ \$ARGV\[0\]\'\ \"\$title\"\)\l\ \ \ \ echo\ \"\ \ label\=\\\"\$titlequoted\\\"\"\l\ \ fi\l\l\ \ if\ \[\ \$showlegend\ \=\ 1\ \]\;\ then\l\ \ \ \ echo\ \"\ \ subgraph\ cluster\_0\ \{\"\l\ \ \ \ echo\ \"\ \ \ \ color\=gray80\;\"\l\ \ \ \ echo\ \"\ \ \ \ label\ \=\ \\\"legend\\\\l\\\"\;\"\l\ \ \ \ echo\ \"\ \ \ \ legend\_node\ \[label\=\\\"\{\{type\:subtype\|id\/name\}\|content\\\\l\|metadata\ from\ config\\\\l\}\\\"\]\"\l\ \ \ \ echo\ \"\ \ \}\"\l\ \ fi\l\ \ if\ \[\ \$showobjects\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_objects\l\ \ fi\l\ \ if\ \[\ \$showrefs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_references\l\ \ fi\l\ \ if\ \[\ \$showreflogs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_ref\_logs\l\ \ fi\l\ \ if\ \[\ \$showindex\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_index\l\ \ fi\l\ \ if\ \[\ \$showworkingtree\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_workingtree\l\ \ fi\l\ \ echo\ \"\}\"\l\}\l\l\#\ process\ options\lwhile\ test\ \$\#\ \-gt\ 0\ldo\l\ \ case\ \$1\ in\l\l\ \ \ \ \-h\ \|\ \-\-help\)\l\ \ \ \ \ \ print\_usage\_and\_exit\ 0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-p\ \|\ \-\-print\-only\)\l\ \ \ \ \ \ print\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-i\ \|\ \-\-image\-only\)\l\ \ \ \ \ \ image\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-g\ \|\ \-\-git\-dir\)\l\ \ \ \ \ \ GIT\_DIR\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-w\ \|\ \-\-work\-dir\)\l\ \ \ \ \ \ GIT\_WORK\_TREE\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-dot\-filename\)\l\ \ \ \ \ \ dotfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-image\-filename\)\l\ \ \ \ \ \ imgfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-display\-cmd\)\l\ \ \ \ \ \ displaycmd\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-sha1\-length\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\=\~m\/\\D\/\ \|\|\ \$ARGV\[0\]\<4\ \|\|\ \$ARGV\[0\]\>40\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \-\-sha1\-lenght\ must\ be\ a\ number\ between\ 4\ and\ 40\ inclusive\.\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ sha1length\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-legend\)\l\ \ \ \ \ \ showlegend\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-objects\)\l\ \ \ \ \ \ showobjects\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-commitcontent\)\l\ \ \ \ \ \ showcommitcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-tagcontent\)\l\ \ \ \ \ \ showtagcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-treecontent\)\l\ \ \ \ \ \ showtreecontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-blobcontent\)\l\ \ \ \ \ \ showblobcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-refs\)\l\ \ \ \ \ \ showrefs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-reflogs\)\l\ \ \ \ \ \ showreflogs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-index\)\l\ \ \ \ \ \ showindex\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-workingtree\)\l\ \ \ \ \ \ workingtree\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-scheme\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(default\|set312\|spectral11\|blues9\|\l\ \ \ \ \ \ \ \ \ \ brbg11\|bupu9\|dark28\|paired12\|pastel19\|set19\)\$\/x\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ color\ scheme\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ colorscheme\=\$2\l\ \ \ \ \ \ color\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\l\ \ \ \ \ \ color\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\l\ \ \ \ \ \ color\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\l\ \ \ \ \ \ color\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\l\ \ \ \ \ \ color\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-\*\)\l\ \ \ \ \ \ case\ \"\$1\"\ in\l\ \ \ \ \ \ \-\-color\-commit\)\ color\_commit\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tag\)\ color\_tag\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tree\)\ color\_tree\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-blob\)\ color\_blob\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-default\)\ color\_default\=\$2\;\;\l\ \ \ \ \ \ \*\)\ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\;\l\ \ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\;\;\l\ \ \ \ \ \ esac\l\ \ \ \ \ \ \#\ prevent\ the\ case\ that\ the\ user\ supplied\ color\ can\ have\ special\ meaning\l\ \ \ \ \ \ \#\ in\ the\ dot\ script\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \=\~\ m\/\\\\\|\"\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \$1\ cannot\ contain\ \\\\\ or\ \\\"\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-orientation\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(TB\|BT\|LR\|RL\)\$\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ orientation\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ orientation\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-title\)\l\ \ \ \ \ \ title\=\"\$2\"\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-\*\ \|\ \-\?\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \#\ Split\ apart\ combined\ short\ options\l\ \ \ \ \-\*\)\l\ \ \ \ \ \ split\=\$1\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ set\ \-\-\ \$\(echo\ \"\$split\"\ \|\ cut\ \-c\ 2\-\ \|\ sed\ \'s\/\.\/\-\&\ \/g\'\)\ \"\$\@\"\l\ \ \ \ \ \ continue\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \*\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ only\ options\ are\ accepted\,\ no\ further\ arguments\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\ \ esac\l\l\ \ shift\ldone\l\l\#\ check\ that\ image\_only\ \&\ print\_only\ aren\'t\ both\ selected\lif\ \[\ \"\$image\_only\"\ \-a\ \"\$print\_only\"\ \]\;\ then\l\ \ echo\ \"ERROR\:\ \-\-image\_only\ and\ \-\-print\_only\ are\ mutualy\ exclusive\ options\"\ \>\&2\l\ \ print\_usage\_and\_exit\ 1\ \>\&2\lfi\l\l\#\ check\ preconditions\lif\ \[\ \!\ \-d\ \"\$GIT\_DIR\"\/objects\ \]\;\ then\l\ \ echo\ \"Not\ a\ git\ repository\"\ \>\&2\l\ \ exit\ 1\lfi\lif\ \!\ which\ perl\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lperl\ not\ found\.\ If\ you\ have\ apt\-get\,\ you\ can\ install\ it\ with\ \'sudo\ apt\-get\linstall\ perl\'\.\lEOF\l\ \ exit\ 1\lfi\l\l\#\ generate\ \.dot\ file\lif\ \[\ \"\$print\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ print\_dot\l\ \ exit\ 0\lfi\lprint\_dot\ \>\"\$dotfilename\"\ \|\|\ exit\ 1\l\l\#\ build\ and\ image\ out\ of\ the\ \.dot\ file\lif\ \!\ which\ dot\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\ldot\ \(part\ of\ graphviz\)\ not\ found\.\ Either\ use\ the\ \-\-print\-only\ option\,\ or\linstall\ graphviz\.\ If\ you\ have\ apt\-get\,\ you\ can\ do\ that\ with\ \'sudo\ apt\-get\linstall\ graphviz\'\.\lEOF\l\ \ exit\ 1\lfi\ldot\ \-Tpng\ \"\$dotfilename\"\ \>\ \"\$imgfilename\"\ \|\|\ exit\ 1\l\l\#\ display\ image\lif\ \[\ \"\$image\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ exit\ 0\lfi\l\lif\ \!\ which\ \"\$displaycmd\"\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lCommand\ to\ display\ image\ not\ found\ \(\$displaycmd\)\.\lAn\ image\ was\ generated\,\ but\ I\ cannot\ display\ it\.\ You\ might\ want\ to\ make\ use\lthe\ \-\-image\-only\ or\ the\ \-\-display\-cmd\ \<command\>\ option\.\lEOF\l\ \ if\ \[\ \"\$displaycmd\"\ \=\ \"display\"\ \]\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lIf\ you\ have\ apt\-get\,\ you\ can\ install\ the\ command\ \'display\'\ \(part\ of\limagemagick\)\ with\ \'sudo\ apt\-get\ install\ imagemagick\'\.\lEOF\l\ \ fi\l\ \ exit\ 1\lfi\l\"\$displaycmd\"\ \"\$imgfilename\"\l}"]  _refs___heads___master -> _refs___remotes___origin___master [style=dotted, color=gray, fontcolor=gray, label="upstream branch"]
  _refs___heads___master -> _0f6f 
  _refs___heads___master [style=filled, fillcolor=gray,  label="{{ref:local branch|refs\/heads\/master}|0f6f\l|remote\ \=\ origin\lmerge\ \=\ refs\/heads\/master\l}"]
  _refs___remotes___origin___master -> _0f6f 
  _refs___remotes___origin___master [style=filled, fillcolor=yellow,  label="{{ref:remote tracking branch|refs\/remotes\/origin\/master}|0f6f\l}"]
  _FETCH_HEAD [style=filled, fillcolor=gray30, fontcolor=white,  label="{{ref:pseudoref|FETCH\_HEAD}|\l}"]
  _HEAD -> _refs___heads___master 
  _HEAD [style=filled, fillcolor=gray30, fontcolor=white,  label="{{ref|HEAD}|ref\:\ refs\/heads\/master\l}"]
  reflog_refs___heads___master -> _0f6f [color=gray90]
  reflog_refs___heads___master -> _00ee [color=gray90]
  reflog_refs___heads___master [color=gray90, fontcolor=gray, label="{{reflog|logs/refs/heads/master}|0f6f\ refs\/heads\/master\@\{0\}\:\ commit\:\ fix\(lint\)\:\ format\l00ee\ refs\/heads\/master\@\{1\}\:\ commit\ \(initial\)\:\ feat\(v1\.0\.0\)\:\ release\l}"]
  reflog_refs___remotes___origin___master -> _0f6f [color=gray90]
  reflog_refs___remotes___origin___master [color=gray90, fontcolor=gray, label="{{reflog|logs/refs/remotes/origin/master}|0f6f\ refs\/remotes\/origin\/master\@\{0\}\:\ update\ by\ push\l}"]
  reflog_HEAD -> _0f6f [color=gray90]
  reflog_HEAD -> _00ee [color=gray90]
  reflog_HEAD [color=gray90, fontcolor=gray, label="{{reflog|logs/HEAD}|0f6f\ HEAD\@\{0\}\:\ commit\:\ fix\(lint\)\:\ format\l00ee\ HEAD\@\{1\}\:\ commit\ \(initial\)\:\ feat\(v1\.0\.0\)\:\ release\l}"]
  index -> _b04a
  index -> _db71
  index -> _9daa
  index -> _50ed
  index -> _c3df
  index [style=filled, fillcolor=lightcyan, label="{{index}|100644\ b04a\ 0\	\.editorconfig\l100644\ db71\ 0\	\.gitattributes\l100644\ 9daa\ 0\	\.gitignore\l100644\ 50ed\ 0\	README\.md\l100755\ c3df\ 0\	git\-draw\l}"]
  workingtree_root -> ___Users___sbacha___gitdot______editorconfig
  ___Users___sbacha___gitdot______editorconfig [label="{{working_tree_node:file|\.editorconfig}|\#\ \@file\ devops\ editorconfig\l\#\ \@info\ conformant\ editorconfig\l\lroot\ \=\ true\l\l\#\ defaults\l\[\*\]\lcharset\ \=\ utf\-8\lend\_of\_line\ \=\ lf\linsert\_final\_newline\ \=\ true\ltrim\_trailing\_whitespace\ \=\ true\l\l\#\ JavaScript\,\ JSON\,\ JSX\,\ JavaScript\ Modules\,\ TypeScript\l\#\ https\:\/\/github\.com\/feross\/standard\l\#\ https\:\/\/prettier\.io\l\[\*\.\{cjs\,js\,json\,jsx\,mjs\,ts\,tsx\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ HTML\l\#\ https\:\/\/google\.github\.io\/styleguide\/htmlcssguide\.xml\#General\_Formatting\_Rules\l\[\*\.\{htm\,html\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\ltrim\_trailing\_whitespace\ \=\ true\l\#\ TOML\l\#\ https\:\/\/github\.com\/toml\-lang\/toml\/tree\/master\/examples\l\[\*\.toml\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ YAML\l\#\ http\:\/\/yaml\.org\/spec\/1\.2\/2009\-07\-21\/spec\.html\#id2576668\l\[\*\.\{yaml\,yml\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ Shell\l\#\ https\:\/\/google\.github\.io\/styleguide\/shell\.xml\#Indentation\l\[\*\.\{bash\,sh\,zsh\}\]\lindent\_size\ \=\ 2\lindent\_style\ \=\ space\l\l\#\ confg\ \+\ cfg\l\[\*\.\{conf\,cfg\}\]\lcharset\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ UTF\-8\lend\_of\_line\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ LF\lindent\_size\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 4\lindent\_style\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ tab\linsert\_final\_newline\ \ \ \ \ \ \ \ \=\ true\ltab\_width\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 4\ltrim\_trailing\_whitespace\ \ \ \ \=\ true\l\l\[Makefile\]\lindent\_style\ \=\ tab\l}"]
  workingtree_root -> ___Users___sbacha___gitdot___git___draw
  ___Users___sbacha___gitdot___git___draw [label="{{working_tree_node:file|git\-draw}|\#\!\/bin\/bash\l\#SPDX\-License\-Identifier\:\ GPL\-3\.0\l\#\ NAME\l\#\ \ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\#\l\#\ SYNOPSIS\l\#\ \ \ git\-draw\ \[OPTION\]\.\.\.\l\#\l\#\ PREREQUISITES\l\#\ \ \ You\ don\'t\ need\ graphviz\ or\ imagemagick\ if\ you\ use\ git\-draw\ with\ certain\l\#\ \ \ options\.\l\#\l\#\ \ \ \-\ perl\l\#\ \ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\#\ \ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\#\l\#\ \ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\#\l\#\ \ \ \ \ sudo\ apt\-get\ install\ perl\ graphviz\ imagemagick\l\#\l\#\ DESCRIPTION\l\#\ \ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\l\#\ \ \ for\ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\#\l\#\ \ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\#\ \ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\#\ \ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\#\l\#\ \ \ As\ long\ as\ you\ run\ git\-draw\ from\ within\ a\ git\ repository\,\ it\ will\ graph\l\#\ \ \ the\ repository\.\ \ \ An\ alternate\ git\ repository\ can\ be\ chosen\ using\ the\l\#\ \ \ \-\-git\-dir\ and\/or\ \-\-work\-dir\ flags\.\l\#\l\#\ \ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\#\ \ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\#\ \ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\#\ \ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\#\ \ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\#\ \ \ references\ aka\ pointers\ and\ graphs\.\l\#\l\#\ OPTIONS\l\#\ \ \ \-h\,\ \-\-help\l\#\ \ \ \ \ Prints\ a\ help\ message\ and\ exits\.\l\#\l\#\ \ \ \-p\,\ \-\-print\-only\l\#\ \ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\l\#\ \ \ \ \ \-\-image\-only\.\l\#\l\#\ \ \ \-i\,\ \-\-image\-only\l\#\ \ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\l\#\ \ \ \ \ Mutually\ exclusive\ with\ \-\-print\-only\.\l\#\l\#\ \ \ \-g\,\ \-\-git\-dir\l\#\ \ \ \ \ Git\ repository\ directory\ to\ use\l\#\l\#\ \ \ \-w\,\ \-\-work\-dir\l\#\ \ \ \ \ Top\ level\ git\ working\ directory\l\#\l\#\ \ \ \-\-dot\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\#\l\#\ \ \ \-\-image\-filename\ \<filename\>\l\#\ \ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\#\l\#\ \ \ \-\-display\-cmd\ \<command\>\l\#\ \ \ \ \ Command\ to\ use\ to\ display\ image\l\#\l\#\ \ \ \-\-sha1\-length\ \<length\>\l\#\ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\ in\ the\ graph\.\ Must\ be\ a\ number\ between\l\#\ \ \ \ \ 4\ and\ 40\ inclusive\.\l\#\l\#\ \ \ \-\-hide\-legend\l\#\ \ \ \ \ Don\'t\ display\ the\ legend\l\#\l\#\ \ \ \-\-hide\-objects\l\#\ \ \ \ \ Don\'t\ display\ git\ objects\l\#\l\#\ \ \ \-\-hide\-refs\l\#\ \ \ \ \ Don\'t\ display\ references\l\#\l\#\ \ \ \-\-hide\-reflogs\l\#\ \ \ \ \ Don\'t\ display\ reflogs\l\#\l\#\ \ \ \-\-hide\-index\l\#\ \ \ \ \ Don\'t\ display\ the\ index\l\#\l\#\ \ \ \-\-hide\-workingtree\l\#\ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\#\l\#\ \ \ \-\-hide\-commitcontent\l\#\ \ \ \ \ Hide\ commit\ content\l\#\l\#\ \ \ \-\-hide\-tagcontent\l\#\ \ \ \ \ Hide\ tag\ content\l\#\l\#\ \ \ \-\-hide\-treecontent\l\#\ \ \ \ \ Hide\ tree\ content\l\#\l\#\ \ \ \-\-hide\-blobcontent\l\#\ \ \ \ \ Hide\ blob\ content\l\#\l\#\ \ \ \-\-color\-scheme\ \<color\ scheme\>\l\#\ \ \ \ \ Choose\ color\ scheme\.\ \<color\ scheme\>\ can\ be\ one\ of\:\ default\,\ set312\,\l\#\ \ \ \ \ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\ dark28\,\ paired12\,\ pastel19\,\ set19\l\#\l\#\ \ \ \-\-color\-commit\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ commit\ objects\l\#\l\#\ \ \ \-\-color\-tag\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tag\ objects\l\#\l\#\ \ \ \-\-color\-tree\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ tree\ objects\l\#\l\#\ \ \ \-\-color\-blob\ \<color\>\l\#\ \ \ \ \ Set\ color\ for\ blob\ objects\l\#\l\#\ \ \ \-\-color\-default\ \<color\>\l\#\ \ \ \ \ Set\ default\ color\l\#\l\#\ \ \ \-\-orientation\ \<orientation\>\l\#\ \ \ \ \ Change\ the\ layout\ orientation\ of\ the\ graph\.\ Must\ be\ one\ of\ the\l\#\ \ \ \ \ following\:\l\#\ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\#\ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\#\ \ \ \ \ \ \ LR\ \ left\ to\ right\l\#\ \ \ \ \ \ \ RL\ \ right\ to\ left\l\#\l\#\ \ \ \-\-title\ \<text\>\l\#\ \ \ \ \ Adds\ the\ given\ text\ as\ title\ to\ the\ drawing\l\#\l\#\ AUTHOR\l\#\ \ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\#\ \ \ Modifications\ by\ Nathan\ Doss\ \<nathan\.doss\@gmail\.com\>\l\#\l\#\ COPYRIGHT\l\#\ \ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\#\ \ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\#\ \ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\l\#\ \ \ by\ law\.\l\#\l\#\ SEE\ ALSO\l\#\ \ \ git\(1\)\l\l\#\ define\ color\ schemes\lcolor\_scheme\_default\_commit\=\"palegreen1\"\lcolor\_scheme\_default\_tree\=\"lightyellow\"\lcolor\_scheme\_default\_blob\=\"white\"\lcolor\_scheme\_default\_tag\=\"white\"\lcolor\_scheme\_default\_default\=\"white\"\l\lcolor\_scheme\_set312\_commit\=\"\/set312\/7\"\lcolor\_scheme\_set312\_tree\=\"\/set312\/6\"\lcolor\_scheme\_set312\_blob\=\"\/set312\/3\"\lcolor\_scheme\_set312\_tag\=\"\/set312\/12\"\lcolor\_scheme\_set312\_default\=\"white\"\l\lcolor\_scheme\_spectral11\_commit\=\"\/spectral11\/8\"\lcolor\_scheme\_spectral11\_tree\=\"\/spectral11\/4\"\lcolor\_scheme\_spectral11\_blob\=\"\/spectral11\/10\"\lcolor\_scheme\_spectral11\_tag\=\"\/spectral11\/5\"\lcolor\_scheme\_spectral11\_default\=\"white\"\l\lcolor\_scheme\_blues9\_commit\=\"\/blues9\/3\"\lcolor\_scheme\_blues9\_tree\=\"\/blues9\/5\"\lcolor\_scheme\_blues9\_blob\=\"\/blues9\/7\"\lcolor\_scheme\_blues9\_tag\=\"\/blues9\/2\"\lcolor\_scheme\_blues9\_default\=\"white\"\l\lcolor\_scheme\_brbg11\_commit\=\"\/brbg11\/3\"\lcolor\_scheme\_brbg11\_tree\=\"\/brbg11\/5\"\lcolor\_scheme\_brbg11\_blob\=\"\/brbg11\/7\"\lcolor\_scheme\_brbg11\_tag\=\"\/brbg11\/9\"\lcolor\_scheme\_brbg11\_default\=\"white\"\l\lcolor\_scheme\_bupu9\_commit\=\"\/bupu9\/2\"\lcolor\_scheme\_bupu9\_tree\=\"\/bupu9\/4\"\lcolor\_scheme\_bupu9\_blob\=\"\/bupu9\/6\"\lcolor\_scheme\_bupu9\_tag\=\"\/bupu9\/8\"\lcolor\_scheme\_bupu9\_default\=\"white\"\l\lcolor\_scheme\_dark28\_commit\=\"\/dark28\/5\"\lcolor\_scheme\_dark28\_tree\=\"\/dark28\/2\"\lcolor\_scheme\_dark28\_blob\=\"\/dark28\/3\"\lcolor\_scheme\_dark28\_tag\=\"\/dark28\/6\"\lcolor\_scheme\_dark28\_default\=\"white\"\l\lcolor\_scheme\_paired12\_commit\=\"\/paired12\/3\"\lcolor\_scheme\_paired12\_tree\=\"\/paired12\/1\"\lcolor\_scheme\_paired12\_blob\=\"\/paired12\/7\"\lcolor\_scheme\_paired12\_tag\=\"\/paired12\/11\"\lcolor\_scheme\_paired12\_default\=\"white\"\l\lcolor\_scheme\_pastel19\_commit\=\"\/pastel19\/3\"\lcolor\_scheme\_pastel19\_tree\=\"\/pastel19\/5\"\lcolor\_scheme\_pastel19\_blob\=\"\/pastel19\/4\"\lcolor\_scheme\_pastel19\_tag\=\"\/pastel19\/6\"\lcolor\_scheme\_pastel19\_default\=\"white\"\l\lcolor\_scheme\_set19\_commit\=\"\/set19\/3\"\lcolor\_scheme\_set19\_tree\=\"\/set19\/5\"\lcolor\_scheme\_set19\_blob\=\"\/set19\/2\"\lcolor\_scheme\_set19\_tag\=\"\/set19\/6\"\lcolor\_scheme\_set19\_default\=\"white\"\l\lexport\ GIT\_DIR\=\$\(git\ rev\-parse\ \-\-git\-dir\)\lexport\ GIT\_WORK\_TREE\=\$\(git\ rev\-parse\ \-\-show\-toplevel\)\l\lmake\_imgfilename\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ opendir\(DIR\,\$ARGV\[0\]\)\;\l\ \ \ \ foreach\(readdir\(DIR\)\)\ \{\l\	\	\ \ if\ \(\ m\/git\-draw\(\\d\+\)\.png\/\ \)\ \{\l\ \ \ \ \ \ \ \ if\ \(\ \$1\ \>\ \$max\ \)\ \{\ \$max\ \=\ \$1\ \}\;\l\ \ \ \ \ \ \}\l\ \ \ \ \}\l\ \ \ \ print\ \"git\-draw\"\ \.\ \(\$max\+1\)\ \.\ \"\.png\"\'\ \"\$GIT\_WORK\_TREE\"\l\}\l\l\#\ set\ defaults\ldotfilename\=git\-draw\.dot\limgfilename\=\$\(make\_imgfilename\)\ldisplaycmd\=display\lsha1length\=4\lshowlegend\=1\lshowobjects\=1\lshowrefs\=1\lshowreflogs\=1\lshowindex\=1\lshowworkingtree\=1\lshowcommitcontent\=1\lshowtreecontent\=1\lshowtagcontent\=1\lshowblobcontent\=1\lorientation\=\"TB\"\ltitle\=\lcolorscheme\=\"default\"\l\l\#\ set\ colors\ \(hack\ \.\.\.\ got\ to\ be\ a\ better\ way\)\lcolor\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\lcolor\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\lcolor\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\lcolor\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\lcolor\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\l\#\ \$1\ \=\ exit\ code\lprint\_usage\_and\_exit\(\)\ \{\l\ \ cat\ \<\<EOF\lUsage\:\ git\-draw\ \[options\]\l\ \ \-h\|\-\-help\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Print\ help\ message\ \&\ exit\l\ \ \-p\|\-\-print\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ print\ \.dot\ to\ stdout\l\ \ \-i\|\-\-image\-only\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Only\ create\ an\ image\,\ and\ a\ \.dot\ file\ beforehand\l\ \ \-g\|\-\-git\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Git\ repository\ directory\ to\ use\l\ \ \-w\|\-\-work\-dir\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Top\ level\ git\ working\ directory\l\ \ \-\-dot\-filename\ \<filename\>\ \ \ \ \ \ Name\ of\ the\ dot\ file\ to\ generate\l\ \ \-\-image\-filename\ \<filename\>\ \ \ \ Name\ of\ the\ image\ file\ to\ generate\l\ \ \-\-display\-cmd\ \<command\>\ \ \ \ \ \ \ \ Command\ to\ use\ to\ display\ image\l\ \ \-\-sha1\-length\ \<length\>\ \ \ \ \ \ \ \ \ Number\ of\ sha1\ digits\ to\ display\l\ \ \-\-hide\-legend\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ legend\l\ \ \-\-hide\-objects\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ git\ objects\l\ \ \-\-hide\-refs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ references\l\ \ \-\-hide\-reflogs\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ reflogs\l\ \ \-\-hide\-index\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ index\l\ \ \-\-hide\-workingtree\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ the\ working\ tree\l\ \ \-\-hide\-commitcontent\ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ commit\ content\l\ \ \-\-hide\-tagcontent\ \ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tag\ content\l\ \ \-\-hide\-treecontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ tree\ content\l\ \ \-\-hide\-blobcontent\ \ \ \ \ \ \ \ \ \ \ \ \ Don\'t\ display\ blob\ content\l\ \ \-\-color\-scheme\ \<color\ scheme\>\ \ Choose\ color\ scheme\.\ Can\ be\ one\ of\:\ default\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ set312\,\ spectral11\,\ blues9\,\ brbg11\,\ bupu9\,\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dark28\,\ paired12\,\ pastel19\,\ set19\l\ \ \-\-color\-commit\ \<color\>\ \ \ \ \ \ \ \ \ Set\ color\ for\ commit\ objects\l\ \ \-\-color\-tag\ \<color\>\ \ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tag\ objects\l\ \ \-\-color\-tree\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ tree\ objects\l\ \ \-\-color\-blob\ \<color\>\ \ \ \ \ \ \ \ \ \ \ Set\ color\ for\ blob\ objects\l\ \ \-\-color\-default\ \<color\>\ \ \ \ \ \ \ \ Set\ default\ color\l\ \ \-\-orientation\ \<orientation\>\ \ \ \ Change\ the\ graph\ orientation\.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<orientation\>\ must\ be\ one\ of\ the\ following\:\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TB\ \ top\ to\ bottom\,\ the\ default\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ BT\ \ bottom\ to\ top\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LR\ \ left\ to\ right\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ RL\ \ right\ to\ left\l\ \ \-\-title\ \<text\>\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Add\ \<text\>\ as\ title\ to\ the\ drawing\l\lThe\ primary\ documentation\ is\ at\ the\ top\ of\ the\ git\-draw\ script\ itself\.\lEOF\l\ \ exit\ \"\$1\"\l\}\l\l\#\ TODO\l\#\ \ \ \-\ \ Layout\ graph\ so\ commit\ DAG\ is\ top\-down\ and\ on\ the\ left\,\ probably\ using\l\#\ \ \ \ \ \ graphviz\'s\ ranks\.\l\#\ \ \ \-\ \ Optionally\ use\ temporary\ files\ which\ the\ user\ does\ not\ directly\ see\l\#\ \ \ \-\ \ Optionally\ omit\ drawing\ the\ content\ of\ all\/certain\ objects\/refs\ so\ a\l\#\ \ \ \ \ \ bit\ larger\ than\ tiny\ repositories\ still\ draw\ usefully\.\l\#\ \ \ \-\ \ tree\ objects\ \/\ reflogs\ shall\ fan\ out\ graph\ edges\ at\ corresponding\ line\l\#\ \ \ \ \ \ in\ content\l\#\ \ \ \-\ \ Amend\ type\ cell\ \(top\ left\)\ and\ id\ cell\ \(top\ right\)\ with\ the\ prefix\l\#\ \ \ \ \ \ \'type\=\'\ and\ \'id\=\'\ to\ be\ very\ clear\.\ Optionally\ turn\ off\ with\ options\.\l\#\ \ \ \-\ \ Provide\ options\ to\ choose\ the\ tool\ to\ display\ the\ image\ outputted\ by\l\#\ \ \ \ \ \ dot\.\l\#\ \ \ \-\ \ Read\ gitrepository\-layou\(1\)\ to\ find\ out\ more\ things\ which\ could\ be\l\#\ \ \ \ \ \ displayed\l\#\ \ \ \-\ \ Draw\ multiple\ repos\ in\ one\ image\.\ Usefull\ to\ demonstrate\ distributed\ git\.\l\#\ \ \ \-\ \ Draw\ packed\ objects\ and\ refs\ in\ a\ subgraph\ respectively\.\l\#\ \ \ \-\ \ Allow\ that\ the\ current\ working\ directory\ can\ be\ any\ subdirectory\ of\ a\l\#\ \ \ \ \ \ git\ project\.\ Similarly\,\ allow\ to\ specify\ the\ git\ repository\ via\ command\l\#\ \ \ \ \ \ line\ arguments\.\l\labbreviate\_sha1\(\)\ \{\l\ \ \#\ BUG\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\ replace\ what\ looks\ like\ a\ sha1\l\ \ perl\ \-pe\ \'s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\'\l\}\l\lls\_all\_objects\(\)\ \{\l\ \ \#\ unpacked\ objects\l\ \ find\ \"\$GIT\_DIR\"\/objects\/\ \-type\ f\ \|\l\ \ \ \ perl\ \-ne\ \'print\ \"\$1\$2\\n\"\ if\ m\@\^\.\*\/\(\[a\-f0\-9\]\{2\}\)\/\(\[a\-f0\-9\]\{38\}\)\@\'\l\l\ \ \#\ packed\ objects\l\ \ \#\ note\ that\ the\ \.idx\ is\ not\ always\ present\l\ \ find\ \"\$GIT\_DIR\"\/objects\/pack\/\ \-iname\ \'\*\.idx\'\ \|\ while\ read\ idxfile\;\ do\l\ \ \ \ cat\ \"\$idxfile\"\ \|\ git\ show\-index\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\[a\-f0\-9\]\{40\}\)\.\*\$\@\$1\@\'\l\ \ done\l\}\l\l\#\ Prints\ all\ references\,\ one\ null\-character\ delimited\ \'line\'\ per\ ref\.\ Each\l\#\ \'line\'\ starts\ with\ the\ name\ of\ the\ ref\,\ followed\ by\ space\,\ followed\ by\ the\l\#\ conent\ of\ the\ ref\,\ which\ can\ consist\ of\ any\ characters\,\ most\ notably\l\#\ newlines\.\lls\_all\_refs\(\)\ \{\l\ \ \#\ print\ all\ normal\ refs\.\ \'git\ show\-ref\'\ prints\ referee\ and\ ref\ name\ in\ the\l\ \ \#\ wrong\ order\ for\ our\ purpose\,\ so\ swap\ the\ order\l\ \ git\ show\-ref\ \|\l\ \ \ \ perl\ \-pe\ \'chomp\;\ s\/\^\(\\S\+\)\\s\*\(\\S\*\)\$\/\$2\ \$1\\0\/\'\l\l\ \ \#\ print\ HEAD\ and\ all\ special\ refs\l\ \ for\ special\_ref\ in\ \.git\/\*HEAD\ \;\ do\l\ \ \ \ printf\ \"\%s\"\ \"\$\(basename\ \"\$special\_ref\"\)\ \"\l\ \ \ \ cat\ \"\$special\_ref\"\l\ \ \ \ printf\ \"\\0\"\l\ \ done\l\}\l\lls\_all\_objects\_short\(\)\ \{\l\ \ ls\_all\_objects\ \|\ while\ read\ sha1\;\ do\l\ \ \ \ git\ rev\-parse\ \-\-short\=\$sha1length\ \"\$sha1\"\l\ \ done\l\}\l\lprint\_dot\_objects\(\)\ \{\l\ \ ls\_all\_objects\_short\ \|\ while\ read\ id\;\ do\l\ \ \ \ dotid\=\"\_\$id\"\l\ \ \ \ object\_type\=\$\(git\ cat\-file\ \-t\ \"\$id\"\)\l\ \ \ \ objcontent\=\$\(git\ cat\-file\ \-p\ \"\$id\"\ \|\ abbreviate\_sha1\ \|\l\ \ \ \ \ \ perl\ \-pe\ \'s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\'\)\l\l\ \ \ \ case\ \$object\_type\ in\l\ \ \ \ commit\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_commit\"\l\ \ \ \ \ \ if\ \[\ \$showcommitcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tag\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tag\"\l\ \ \ \ \ \ if\ \[\ \$showtagcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ tree\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_tree\"\l\ \ \ \ \ \ if\ \[\ \$showtreecontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ blob\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_blob\"\l\ \ \ \ \ \ if\ \[\ \$showblobcontent\ \!\=\ 1\ \]\;\ then\l\ \ \ \ \ \ \ \ objcontent\=\"\"\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ \;\;\l\ \ \ \ \*\)\l\ \ \ \ \ \ fillcolor\=\"\$color\_default\"\l\ \ \ \ \ \ \;\;\l\ \ \ \ esac\l\l\ \ \ \ printf\ \%s\ \"\ \ \$dotid\ \[fillcolor\=\\\"\$fillcolor\\\"\,\ style\=\\\"filled\,rounded\\\"\,\ \"\\\l\ \ \ \ \ \ \"label\=\\\"\{\{obj\:\$object\_type\|\$id\}\|\$objcontent\}\\\"\]\"\l\l\ \ \ \ \#\ todo\:\ use\ git\'s\ commands\ to\ extract\ the\ object\ references\l\ \ \ \ \#\ BUG\:\ must\ escape\ stuff\ that\ \.dot\ interprets\ \(\\n\,\\l\,\\l\,\|\,\{\}\,\.\.\.\)\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ cannot\ deal\ with\ multiple\ sha1\ on\ one\ line\l\ \ \ \ \#\ BUG\(obsolete\ when\ using\ git\'s\ cmds\)\:\ in\ a\ blob\ or\ commit\-msg\,\ would\ also\l\ \ \ \ \#\ \ \ replace\ what\ looks\ like\ a\ sha1\l\ \ \ \ git\ cat\-file\ \-p\ \"\$id\"\ \|\l\ \ \ \ \ \ perl\ \-ne\ \'print\ \"\ \ \'\"\$dotid\"\'\ \-\>\ \_\"\ \.\l\ \ \ \ \ \ \ \ \`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\ if\ \/\(\[a\-f0\-9\]\{40\}\)\/\'\l\ \ done\l\l\ \ \#\ \-\-no\-reflogs\ is\ used\ and\ \-\-cache\ is\ \_not\_\ used\ because\ at\ the\ beginning\,\l\ \ \#\ it\ is\ easier\ to\ teach\ novices\ the\ concept\ of\ unreachable\ objects\ when\ the\l\ \ \#\ index\ and\ the\ reflogs\ are\ ignored\.\ \ In\ the\ tiny\ repositories\ git\-draw\ aims\l\ \ \#\ at\,\ the\ reflog\l\ \ git\ fsck\ \-\-no\-reflogs\ \-\-unreachable\ \-\-dangling\ 2\>\/dev\/null\ \|\l\ \ \ perl\ \-ne\ \'print\ \"\ \ \_\"\ \.\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\ \.\l\ \ \ \ \ \"\ \[style\=\\\"dotted\,rounded\\\"\,\ fontcolor\=gray\,\ color\=gray\]\\n\"\ if\ \/\^\(\?\:dangling\|unreachable\)\\b\.\*\?\(\[a\-f0\-9\]\{40\}\)\/\'\l\}\l\lprint\_dot\_references\(\)\ \{\l\ \ ls\_all\_refs\ \|\l\ \ \ \ perl\ \-ne\ \'\l\ \ \ \ \ \ BEGIN\ \{\ \$\/\ \=\ \"\\0\"\;\ \}\l\ \ \ \ \ \ chomp\;\l\ \ \ \ \ \ if\ \(m\@\^\(\\S\+\)\ \(\.\*\)\@s\)\ \{\ \#\ \$\_\ contains\ newlines\l\ \ \ \ \ \ \ \ \$currentref\ \=\ \$1\;\l\ \ \ \ \ \ \ \ \{\ local\ \$\/\ \=\ \"\\n\"\;\l\ \ \ \ \ \ \ \ \ \ chomp\(\$referee\_lines\ \=\ \$2\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \(\$currentref\_quoted\ \=\ \$currentref\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \$dotid\_currentref\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$currentref\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\l\ \ \ \ \ \ \ \ \#\ determine\ \$reftype\,\ \$fillcolor\,\ \$configmetadata\,\ \$fontcolorelement\l\ \ \ \ \ \ \ \ \$reftype\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"gray\"\;\l\ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \#\ local\ branches\l\ \ \ \ \ \ \ \ if\ \(\$currentref\ \=\~\ m\@\^refs\/heads\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:local\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \(\$currentref\_short\ \=\ \$currentref\)\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \$remote\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.remote\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ \$merge\ \=\ substr\(\`git\ config\ \-\-get\ branch\\\\\.\$currentref\_short\\\\\.merge\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ \&\&\ \$merge\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$remote\ eq\ \"\.\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_\"\ \.\ \(\(\$tmp\ \=\ \$merge\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\ \$merge\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\^refs\/heads\/\@\@\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\_core\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_remote\ \=\ \(\(\$tmp\ \=\ \$remote\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_merge\ \=\ \"\_refs\_\_\_remotes\_\_\_\$\{dotid\_remote\}\_\_\_\$\{dotid\_merge\_core\}\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_merge\ \[style\=dotted\,\ color\=gray\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"upstream\ branch\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\ \"remote\ \=\ \$remote\\nmerge\ \=\ \$merge\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ \ \ \$tmp\ \=\~\ s\/\\n\/\\\\l\/g\;\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\l\ \ \ \ \ \ \ \ \ \ \ \ \$configmetadata\ \=\ \"\|\$tmp\"\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ remote\ tracking\ branches\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/remotes\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:remote\ tracking\ branch\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"yellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ tags\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\@\^refs\/tags\/\@\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:tag\"\;\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"lightyellow\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \#\ HEAD\ and\ pseudorefs\l\ \ \ \ \ \ \ \ elsif\ \(\$currentref\ \=\~\ m\/\^\[A\-Z0\-9\_\]\*HEAD\$\/\)\ \{\l\ \ \ \ \ \ \ \ \ \ unless\ \(\$currentref\ eq\ \"HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$reftype\ \=\ \"\:pseudoref\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ if\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ ORIG\_HEAD\ is\ semantically\ like\ a\ poor\ mans\ reflog\,\l\ \ \ \ \ \ \ \ \ \ \ \ \#\ thus\ same\ colors\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"white\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"color\=gray90\,\ fontcolor\=gray\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$fillcolor\=\"gray30\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"fontcolor\=white\,\ \"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ outgoing\ edges\ \(to\ the\ referees\)\ of\ current\ reference\l\ \ \ \ \ \ \ \ my\ \$all\_referees\_exist\ \=\ 1\;\l\ \ \ \ \ \ \ \ my\ \@adorned\_quoted\_referees\ \=\ \(\)\;\l\ \ \ \ \ \ \ \ for\ my\ \$referee\_line\ \(split\(\"\\n\"\,\ \$referee\_lines\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \#\ Extract\ referee\ from\ referee\ line\.\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\^\(ref\:\ \)\?\(\\S\+\)\/\;\l\ \ \ \ \ \ \ \ \ \ my\ \$is\_symbolic\_ref\ \=\ \(length\(\$1\)\ \>\ 0\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$is\_symbolic\_ref\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ \$2\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\_line\ \=\~\ m\/\(\[0\-9a\-f\]\{40\}\)\/\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$referee\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,\ 0\,\ \-1\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \#\ Actually\ print\ dot\l\ \ \ \ \ \ \ \ \ \ my\ \$adornment\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ my\ \$referee\_exists\ \=\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(\$referee\ \=\~\ m\/\^\[a\-f0\-9\]\+\$\/\)\ \|\|\ \#\ assume\ object\ with\ a\ sha1\ exists\l\ \ \ \ \ \ \ \ \ \ \ \ \ \(0\ \=\=\ system\(\"git\ show\-ref\ \-\-verify\ \-\-quiet\ \-\-\ \$referee\"\)\)\;\l\ \ \ \ \ \ \ \ \ \ if\ \(\$referee\_exists\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$dotid\_referee\ \=\ \"\_\"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \(\(\$tmp\ \=\ \$referee\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$attribs\ \=\ \(\$currentref\ eq\ \"ORIG\_HEAD\"\)\ \?\ \"\[color\=gray90\]\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \-\>\ \$dotid\_referee\ \$attribs\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\ else\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$all\_referees\_exist\ \=\ 0\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$adornment\ \=\ \"\ \\\\\<does\ not\ exist\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \(\$referee\_line\_quoted\ \=\ \$referee\_line\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \$referee\_line\_quoted\ \=\~\l\ \ \ \ \ \ \ \ \ \ \ \ s\/\(\[0\-9a\-f\]\{40\}\)\/substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$1\`\,0\,\-1\)\/eg\;\l\ \ \ \ \ \ \ \ \ \ push\(\@adorned\_quoted\_referees\,\ \"\$referee\_line\_quoted\$adornment\"\)\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ my\ \$adorned\_quoted\_referees\ \=\ join\(\"\\\\l\"\,\ \@adorned\_quoted\_referees\)\;\l\l\ \ \ \ \ \ \ \ \#\ print\ dot\ for\ node\ representing\ current\ reference\l\ \ \ \ \ \ \ \ if\ \(\!\$all\_referees\_exist\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$fillcolor\ \=\ \"red\"\;\l\ \ \ \ \ \ \ \ \ \ \$fontcolorelement\ \=\ \"\"\;\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_currentref\ \[\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"style\=filled\,\ fillcolor\=\$fillcolor\,\ \$fontcolorelement\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{ref\$reftype\|\$currentref\_quoted\}\|\"\ \.\l\ \ \ \ \ \ \ \ \ \ \"\$adorned\_quoted\_referees\\\\l\$configmetadata\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \}\'\l\}\l\lprint\_dot\_ref\_logs\(\)\ \{\l\ \ firstiter\=\"non\-empty\-string\"\ \#\ i\.e\.\ true\l\ \ git\ show\-ref\ \-\-abbrev\=\$sha1length\ \|\l\ \ \ \ \#\ The\ following\ code\ depends\ upon\ HEAD\ being\ the\ last\ in\ the\ list\l\ \ \ \ perl\ \-pe\ \'s\@\^\.\*\?\(\\brefs\/\\S\*\)\$\@\$1\@\;\ END\ \{\ print\ \"HEAD\\n\"\;\}\'\ \|\l\ \ \ \ while\ read\ refname\;\ do\l\ \ \ \ \ \ \#\ work\ around\ the\ problem\ that\ \'git\ reflog\ show\ HEAD\'\ results\ in\ an\l\ \ \ \ \ \ \#\ error\ when\ HEAD\ contains\ refs\/heads\/master\ but\ refs\/heads\/master\ does\l\ \ \ \ \ \ \#\ not\ exist\,\ which\ is\ the\ case\ after\ \'git\ init\'\.\l\ \ \ \ \ \ if\ \[\ \!\ \\\(\ \"\$firstiter\"\ \-a\ \\\(\ \"\$refname\"\ \=\ HEAD\ \\\)\ \\\)\ \]\;\ then\l\ \ \ \ \ \ \ \ \#\ 8eb068f\ master\@\{11\}\:\ commit\:\ tempo\-ext\:\ new\ version\l\ \ \ \ \ \ \ \ git\ reflog\ show\ \"\$refname\"\ \|\ perl\ \-ne\ \'\l\ \ \ \ \ \ \ \ \ \ BEGIN\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \$refname\ \=\ \"\'\"\$refname\"\'\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$dotid\_reflog\ \=\ \"reflog\_\"\ \.\ \(\(\$tmp\ \=\ \$refname\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\,\$tmp\)\;\l\ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ if\ \(m\/\^\(\[a\-f0\-9\]\+\)\.\*\@\\\{\\d\+\\\}\:\ \(\.\*\?\)\$\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\$2\;\ \}\l\ \ \ \ \ \ \ \ \ \ elsif\ \(m\/\^\(\[a\-f0\-9\]\+\)\/\)\ \{\ \$id\_any\=\$1\;\ \$msg\=\"\<lastentry\>\"\;\ \}\l\ \ \ \ \ \ \ \ \ \ \$id\_short\ \=\ substr\(\`git\ rev\-parse\ \-\-short\=\'\$sha1length\'\ \$id\_any\`\,0\,\-1\)\;\l\ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \-\>\ \_\$id\_short\ \[color\=gray90\]\\n\"\;\l\l\ \ \ \ \ \ \ \ \ \ s\/\^\[a\-f0\-9\]\+\/\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ strip\ sha1\;\ \$id\_short\ will\ be\ used\ instead\l\ \ \ \ \ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$id\_short\ \.\ \$\_\;\l\l\ \ \ \ \ \ \ \ \ \ END\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \$trailing\ \=\ \(substr\(\$content\,\-2\)\ eq\ \"\\\\l\"\)\ \?\ \"\"\ \:\ \"\\\\l\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$dotid\_reflog\ \[color\=gray90\,\ fontcolor\=gray\,\ \"\ \.\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \"label\=\\\"\{\{reflog\|logs\/\$refname\}\|\$content\$trailing\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \}\'\l\ \ \ \ \ \ fi\l\ \ \ \ firstiter\=\"\"\ \#\ empty\ stringt\,\ i\.e\.\ false\l\ \ done\l\}\l\lprint\_dot\_index\(\)\ \{\l\ \ git\ ls\-files\ \-\-stage\ \-\-abbrev\=\$sha1length\ \|\ perl\ \-ne\ \'\l\ \ \ \ if\ \(\/\^\[0\-9\]\+\\s\+\(\[a\-f0\-9\]\+\)\/\)\ \{\l\ \ \ \ \ \ print\ \"\ \ index\ \-\>\ \_\$1\\n\"\;\l\l\ \ \ \ \ \ s\/\(\[\^a\-zA\-Z0\-9\\r\\n\]\)\/\\\\\$1\/g\;\ \#\ quote\ for\ dot\l\ \ \ \ \ \ s\/\(\\r\?\\n\)\?\$\/\\\\l\/\;\ \ \ \ \ \ \ \ \ \ \ \ \#\ \\l\ instead\ \\n\ newline\,\ and\ ensure\ \\l\ at\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\ end\ of\ content\l\ \ \ \ \ \ \$content\ \=\ \$content\ \.\ \$\_\;\l\ \ \ \ \}\l\ \ \ \ END\ \{\l\ \ \ \ \ \ if\ \(\$content\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \$content\ \=\ \"\\\\\<empty\\\\\>\"\;\l\ \ \ \ \ \ \}\l\ \ \ \ \ \ print\ \"\ \ index\ \[style\=filled\,\ fillcolor\=lightcyan\,\ \"\ \.\l\ \ \ \ \ \ \ \ \"label\=\\\"\{\{index\}\|\$content\}\\\"\]\\n\"\;\l\ \ \ \ \}\'\l\}\l\lprint\_dot\_workingtree\(\)\ \{\l\ \ perl\ \-e\ \'\l\ \ \ \ \#\!\/usr\/bin\/perl\ \-w\l\ \ \ \ \#\ todo\:\ more\ portable\ by\ not\ relying\ on\ literal\ path\ componenents\ such\ as\ \"\.\"\,\l\ \ \ \ \#\ \"\.\.\"\ and\ \"\/\"\.\l\ \ \ \ use\ strict\;\l\ \ \ \ our\ \%isFqNameIgnored\;\l\ \ \ \ our\ \%isRelNameIgnored\;\l\l\ \ \ \ sub\ print\_dot\_for\_dir\ \{\l\ \ \ \ \ \ \ \ my\ \(\$fqParentDirName\,\ \$fqParentDirNameDotId\,\ \$fqParentDirNameQuoted\,\ \$level\)\ \=\ \@\_\;\l\ \ \ \ \ \ \ \ if\ \(\$level\ \>\=\ 2\)\ \{\ print\ \"level\ exeeded\\n\"\;\ return\;\ \}\l\l\ \ \ \ \ \ \ \ my\ \$parentDirContentQuoted\ \=\ \"\"\;\l\l\ \ \ \ \ \ \ \ opendir\(DIR\,\ \$fqParentDirName\)\ or\ die\ \"cant\ open\ dir\ \$fqParentDirName\ for\ reading\\n\"\;\l\ \ \ \ \ \ \ \ foreach\ my\ \$relFileName\ \(readdir\(DIR\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileName\ \=\ \"\$fqParentDirName\/\$relFileName\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$isFqNameIgnored\{\$fqFileName\}\ or\ \$isRelNameIgnored\{\$relFileName\}\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(not\ \(\-f\ \"\$fqFileName\"\ or\ \-d\ \"\$fqFileName\"\)\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$fqFileNameDotId\ \=\ \$fqFileName\)\ \=\~\ s\@\(\[\^a\-zA\-Z0\-9\_\]\)\@\_\_\_\@g\;\l\ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \-\>\ \$fqFileNameDotId\\n\"\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$relFileNameQuoted\ \=\ \$relFileName\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \$parentDirContentQuoted\ \.\ \$relFileNameQuoted\ \.\ \"\\\\l\"\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$sep\ \=\ \$fqParentDirNameQuoted\ \?\ \"\\\\\/\"\ \:\ \"\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ my\ \$fqFileNameQuoted\ \=\ \$fqParentDirNameQuoted\ \.\ \$sep\ \.\ \$relFileNameQuoted\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ if\ \(\-f\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ local\ \$\/\ \=\ undef\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ open\ FILE\,\ \$fqFileName\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ my\ \$content\ \=\ \<FILE\>\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ close\ FILE\;\l\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \(my\ \$contentQuoted\ \=\ \$content\)\ \=\~\ s\/\(\[\^a\-zA\-Z0\-9\\n\\r\]\)\/\\\\\$1\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\~\ s\/\(\\r\?\\n\)\/\\\\l\/g\;\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ \(\$contentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \$contentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\ \"\ \ \$fqFileNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:file\|\$fqFileNameQuoted\}\|\$contentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ \ \ \ \ elsif\ \(\-d\ \"\$fqFileName\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ print\_dot\_for\_dir\(\"\$fqFileName\"\,\ \"\$fqFileNameDotId\"\,\ \"\$fqFileNameQuoted\"\,\ \$level\ \+\ 1\)\l\ \ \ \ \ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ \}\l\l\ \ \ \ \ \ \ \ my\ \$fqParentDirNameQuotedDisplay\ \=\l\ \ \ \ \ \ \ \ \ \ \$fqParentDirNameQuoted\ eq\ \"\"\ \?\ \"\\\\\<root\\\\\>\"\ \:\ \$fqParentDirNameQuoted\;\l\ \ \ \ \ \ \ \ if\ \(\$parentDirContentQuoted\ eq\ \"\"\)\ \{\l\ \ \ \ \ \ \ \ \ \ \$parentDirContentQuoted\ \=\ \"\\\\\<empty\\\\\>\"\l\ \ \ \ \ \ \ \ \}\l\ \ \ \ \ \ \ \ print\ \"\ \ \$fqParentDirNameDotId\ \[label\=\\\"\{\{working\_tree\_node\:dir\|\$fqParentDirNameQuotedDisplay\}\|\$parentDirContentQuoted\}\\\"\]\\n\"\;\l\ \ \ \ \}\l\l\ \ \ \ my\ \@ignoredFqNames\ \=\ split\(\l\ \ \ \ \ \ \ \ \/\\r\?\\n\/\,\l\ \ \ \ \ \ \ \ \`git\ ls\-files\ \-\-others\ \-i\ \-\-exclude\-standard\ \-\-exclude\ \"\/git\-draw\*\"\`\)\;\l\ \ \ \ foreach\ \(\@ignoredFqNames\)\ \{\l\ \ \ \ \ \ \ \ \$isFqNameIgnored\{\"\$ARGV\[0\]\/\$\_\"\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ foreach\ \(\"\.\"\,\ \"\.\.\"\,\ \"\.git\"\)\ \{\l\ \ \ \ \ \ \ \ \$isRelNameIgnored\{\$\_\}\ \=\ 1\;\l\ \ \ \ \}\l\ \ \ \ print\_dot\_for\_dir\(\$ARGV\[0\]\,\ \"workingtree\_root\"\,\ \"\"\,\ 0\)\;\l\ \ \ \ \'\ \"\$GIT\_WORK\_TREE\"\l\}\l\lprint\_dot\(\)\ \{\l\ \ echo\ \"digraph\ structs\ \{\"\l\ \ echo\ \"\ \ node\ \[shape\=record\,fontsize\=11\]\;\"\l\ \ echo\ \"\ \ rankdir\=\\\"\$orientation\\\"\;\"\l\l\ \ if\ \[\ \"\$title\"\ \]\;\ then\l\ \ \ \ echo\ \"\ \ labelloc\=\\\"t\\\"\"\l\ \ \ \ titlequoted\=\$\(perl\ \-e\ \'\$ARGV\[0\]\=\~s\/\(\[\^a\-zA\-Z0\-9\\n\]\)\/\\\\\$1\/g\;\ print\ \$ARGV\[0\]\'\ \"\$title\"\)\l\ \ \ \ echo\ \"\ \ label\=\\\"\$titlequoted\\\"\"\l\ \ fi\l\l\ \ if\ \[\ \$showlegend\ \=\ 1\ \]\;\ then\l\ \ \ \ echo\ \"\ \ subgraph\ cluster\_0\ \{\"\l\ \ \ \ echo\ \"\ \ \ \ color\=gray80\;\"\l\ \ \ \ echo\ \"\ \ \ \ label\ \=\ \\\"legend\\\\l\\\"\;\"\l\ \ \ \ echo\ \"\ \ \ \ legend\_node\ \[label\=\\\"\{\{type\:subtype\|id\/name\}\|content\\\\l\|metadata\ from\ config\\\\l\}\\\"\]\"\l\ \ \ \ echo\ \"\ \ \}\"\l\ \ fi\l\ \ if\ \[\ \$showobjects\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_objects\l\ \ fi\l\ \ if\ \[\ \$showrefs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_references\l\ \ fi\l\ \ if\ \[\ \$showreflogs\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_ref\_logs\l\ \ fi\l\ \ if\ \[\ \$showindex\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_index\l\ \ fi\l\ \ if\ \[\ \$showworkingtree\ \=\ 1\ \]\;\ then\l\ \ \ \ print\_dot\_workingtree\l\ \ fi\l\ \ echo\ \"\}\"\l\}\l\l\#\ process\ options\lwhile\ test\ \$\#\ \-gt\ 0\ldo\l\ \ case\ \$1\ in\l\l\ \ \ \ \-h\ \|\ \-\-help\)\l\ \ \ \ \ \ print\_usage\_and\_exit\ 0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-p\ \|\ \-\-print\-only\)\l\ \ \ \ \ \ print\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-i\ \|\ \-\-image\-only\)\l\ \ \ \ \ \ image\_only\=1\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-g\ \|\ \-\-git\-dir\)\l\ \ \ \ \ \ GIT\_DIR\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-w\ \|\ \-\-work\-dir\)\l\ \ \ \ \ \ GIT\_WORK\_TREE\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-dot\-filename\)\l\ \ \ \ \ \ dotfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-image\-filename\)\l\ \ \ \ \ \ imgfilename\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-display\-cmd\)\l\ \ \ \ \ \ displaycmd\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-sha1\-length\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\=\~m\/\\D\/\ \|\|\ \$ARGV\[0\]\<4\ \|\|\ \$ARGV\[0\]\>40\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \-\-sha1\-lenght\ must\ be\ a\ number\ between\ 4\ and\ 40\ inclusive\.\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ sha1length\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-legend\)\l\ \ \ \ \ \ showlegend\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-objects\)\l\ \ \ \ \ \ showobjects\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-commitcontent\)\l\ \ \ \ \ \ showcommitcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-tagcontent\)\l\ \ \ \ \ \ showtagcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-treecontent\)\l\ \ \ \ \ \ showtreecontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-blobcontent\)\l\ \ \ \ \ \ showblobcontent\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-refs\)\l\ \ \ \ \ \ showrefs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-reflogs\)\l\ \ \ \ \ \ showreflogs\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-index\)\l\ \ \ \ \ \ showindex\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-hide\-workingtree\)\l\ \ \ \ \ \ workingtree\=0\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-scheme\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(default\|set312\|spectral11\|blues9\|\l\ \ \ \ \ \ \ \ \ \ brbg11\|bupu9\|dark28\|paired12\|pastel19\|set19\)\$\/x\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ color\ scheme\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ colorscheme\=\$2\l\ \ \ \ \ \ color\_commit\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_commit\}\"\)\l\ \ \ \ \ \ color\_tag\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tag\}\"\)\l\ \ \ \ \ \ color\_tree\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_tree\}\"\)\l\ \ \ \ \ \ color\_blob\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_blob\}\"\)\l\ \ \ \ \ \ color\_default\=\$\(eval\ \"echo\ \\\$\{color\_scheme\_\$\{colorscheme\}\_default\}\"\)\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-color\-\*\)\l\ \ \ \ \ \ case\ \"\$1\"\ in\l\ \ \ \ \ \ \-\-color\-commit\)\ color\_commit\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tag\)\ color\_tag\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-tree\)\ color\_tree\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-blob\)\ color\_blob\=\$2\;\;\l\ \ \ \ \ \ \-\-color\-default\)\ color\_default\=\$2\;\;\l\ \ \ \ \ \ \*\)\ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\;\l\ \ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\;\;\l\ \ \ \ \ \ esac\l\ \ \ \ \ \ \#\ prevent\ the\ case\ that\ the\ user\ supplied\ color\ can\ have\ special\ meaning\l\ \ \ \ \ \ \#\ in\ the\ dot\ script\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \=\~\ m\/\\\\\|\"\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Argument\ to\ \$1\ cannot\ contain\ \\\\\ or\ \\\"\"\ \>\&2\l\ \ \ \ \ \ \ \ exit\ 1\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-orientation\)\l\ \ \ \ \ \ if\ \!\ perl\ \-e\ \'if\ \(\$ARGV\[0\]\ \!\~\ m\/\^\(TB\|BT\|LR\|RL\)\$\/\)\ \{\ exit\(1\)\;\ \}\'\ \"\$2\"\ \;\ then\l\ \ \ \ \ \ \ \ echo\ \"ERROR\:\ Invalid\ orientation\ \(\$2\)\.\"\ \>\&2\l\ \ \ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ fi\l\ \ \ \ \ \ orientation\=\$2\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-title\)\l\ \ \ \ \ \ title\=\"\$2\"\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \-\-\*\ \|\ \-\?\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ unknown\ option\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \#\ Split\ apart\ combined\ short\ options\l\ \ \ \ \-\*\)\l\ \ \ \ \ \ split\=\$1\l\ \ \ \ \ \ shift\l\ \ \ \ \ \ set\ \-\-\ \$\(echo\ \"\$split\"\ \|\ cut\ \-c\ 2\-\ \|\ sed\ \'s\/\.\/\-\&\ \/g\'\)\ \"\$\@\"\l\ \ \ \ \ \ continue\l\ \ \ \ \ \ \;\;\l\l\ \ \ \ \*\)\l\ \ \ \ \ \ echo\ \"ERROR\:\ only\ options\ are\ accepted\,\ no\ further\ arguments\ \(\$1\)\"\ \>\&2\l\ \ \ \ \ \ print\_usage\_and\_exit\ 1\ \>\&2\l\ \ \ \ \ \ \;\;\l\ \ esac\l\l\ \ shift\ldone\l\l\#\ check\ that\ image\_only\ \&\ print\_only\ aren\'t\ both\ selected\lif\ \[\ \"\$image\_only\"\ \-a\ \"\$print\_only\"\ \]\;\ then\l\ \ echo\ \"ERROR\:\ \-\-image\_only\ and\ \-\-print\_only\ are\ mutualy\ exclusive\ options\"\ \>\&2\l\ \ print\_usage\_and\_exit\ 1\ \>\&2\lfi\l\l\#\ check\ preconditions\lif\ \[\ \!\ \-d\ \"\$GIT\_DIR\"\/objects\ \]\;\ then\l\ \ echo\ \"Not\ a\ git\ repository\"\ \>\&2\l\ \ exit\ 1\lfi\lif\ \!\ which\ perl\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lperl\ not\ found\.\ If\ you\ have\ apt\-get\,\ you\ can\ install\ it\ with\ \'sudo\ apt\-get\linstall\ perl\'\.\lEOF\l\ \ exit\ 1\lfi\l\l\#\ generate\ \.dot\ file\lif\ \[\ \"\$print\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ print\_dot\l\ \ exit\ 0\lfi\lprint\_dot\ \>\"\$dotfilename\"\ \|\|\ exit\ 1\l\l\#\ build\ and\ image\ out\ of\ the\ \.dot\ file\lif\ \!\ which\ dot\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\ldot\ \(part\ of\ graphviz\)\ not\ found\.\ Either\ use\ the\ \-\-print\-only\ option\,\ or\linstall\ graphviz\.\ If\ you\ have\ apt\-get\,\ you\ can\ do\ that\ with\ \'sudo\ apt\-get\linstall\ graphviz\'\.\lEOF\l\ \ exit\ 1\lfi\ldot\ \-Tpng\ \"\$dotfilename\"\ \>\ \"\$imgfilename\"\ \|\|\ exit\ 1\l\l\#\ display\ image\lif\ \[\ \"\$image\_only\"\ \=\ 1\ \]\ \;\ then\l\ \ exit\ 0\lfi\l\lif\ \!\ which\ \"\$displaycmd\"\ \>\&2\ \>\/dev\/null\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lCommand\ to\ display\ image\ not\ found\ \(\$displaycmd\)\.\lAn\ image\ was\ generated\,\ but\ I\ cannot\ display\ it\.\ You\ might\ want\ to\ make\ use\lthe\ \-\-image\-only\ or\ the\ \-\-display\-cmd\ \<command\>\ option\.\lEOF\l\ \ if\ \[\ \"\$displaycmd\"\ \=\ \"display\"\ \]\;\ then\l\ \ cat\ \>\&2\ \<\<EOF\lIf\ you\ have\ apt\-get\,\ you\ can\ install\ the\ command\ \'display\'\ \(part\ of\limagemagick\)\ with\ \'sudo\ apt\-get\ install\ imagemagick\'\.\lEOF\l\ \ fi\l\ \ exit\ 1\lfi\l\"\$displaycmd\"\ \"\$imgfilename\"\l}"]
  workingtree_root -> ___Users___sbacha___gitdot___README___md
  ___Users___sbacha___gitdot___README___md [label="{{working_tree_node:file|README\.md}|\`git\-draw\`\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\.\ For\ example\ after\ the\ following\ few\ git\ commands\l\l\	git\ init\l\	echo\ \'hello\ world\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\	git\ commit\ \-m\ \'initial\ commit\'\l\	git\ tag\ R1\ \-m\ R1\l\	echo\ \'bye\ bye\'\ \>\ parting\.txt\l\	git\ add\ parting\.txt\l\	git\ commit\ \-m\ \'added\ parting\'\l\	echo\ \'welcome\'\ \>\ greeting\.txt\l\	git\ add\ greeting\.txt\l\l\`git\-draw\`\ will\ display\ the\ following\ image\l\l\[\[example\.png\]\]\l\l\#\#\ Documentation\lThe\ text\ provided\ here\ is\ a\ copy\ of\ the\ documentation\ the\ \`git\-draw\`\ script\ contains\.\l\l\	NAME\l\	\ \ git\-draw\ \-\ draws\ nearly\ the\ full\ content\ of\ a\ tiny\ git\ repository\ as\ a\ graph\l\l\	SYNOPSIS\l\	\ \ git\-draw\ \[OPTION\]\.\.\.\l\l\	PREREQUISITES\l\	\ \ You\ don\'t\ need\ all\ of\ these\ if\ you\ use\ git\-draw\ with\ certain\ options\.\l\l\	\ \ \-\ graphviz\ \(http\:\/\/www\.graphviz\.org\/\)\l\	\ \ \-\ imagemagick\ \(http\:\/\/www\.imagemagick\.org\)\l\l\	\ \ If\ you\ have\ apt\ you\ can\ install\ these\ with\:\l\l\	\ \ \ \ sudo\ apt\-get\ install\ graphviz\ imagemagick\l\l\	DESCRIPTION\l\	\ \ git\-draw\ is\ composed\ of\ three\ main\ steps\,\ where\ the\ 2nd\ and\ 3rd\ are\ just\ for\l\	\ \ convenience\ and\ are\ not\ part\ of\ git\-draw\'s\ core\ responsibility\.\l\l\	\ \ 1\)\ A\ \.dot\ file\ describing\ the\ repository\'s\ content\ as\ a\ graph\ is\ created\.\l\	\ \ 2\)\ dot\ \(see\ graphviz\)\ is\ called\ to\ produce\ an\ image\ out\ of\ that\ \.dot\ file\.\l\	\ \ 3\)\ display\ \(see\ imagemagick\)\ is\ called\ to\ display\ that\ image\.\l\l\	\ \ The\ current\ working\ directory\ must\ be\ at\ the\ root\ of\ the\ working\ tree\ of\l\	\ \ your\ project\,\ i\.e\.\ the\ directory\ which\ contains\ the\ \.git\ directory\.\l\l\	\ \ The\ intention\ is\ to\ help\ learning\ Git\'s\ basic\ concepts\ \(references\,\ Git\l\	\ \ objects\,\ SHA\-1\ checksum\ over\ content\ as\ id\)\.\ Virtually\ all\ information\l\	\ \ concerning\ Git\'s\ basic\ concepts\ is\ contained\ in\ the\ drawing\.\ Thus\ git\-draw\l\	\ \ is\ aimed\ at\ tiny\ toy\ Git\ repositories\ and\ at\ users\ with\ an\ engineer\l\	\ \ background\,\ i\.e\.\ users\ which\ are\ not\ scared\ off\ by\ terms\ like\ checksum\,\l\	\ \ references\ aka\ pointers\ and\ graphs\.\l\l\	OPTIONS\l\	\ \ \-p\,\ \-\-print\-only\l\	\ \ \ \ Only\ prints\ the\ \.dot\ file\ to\ STDOUT\.\ Mutually\ exclusive\ with\ \-\-image\-only\.\l\l\	\ \ \-i\,\ \-\-image\-only\l\	\ \ \ \ Only\ generates\ an\ image\ of\ the\ graph\,\ and\ a\ \.dot\ file\ beforehand\.\ Mutually\l\	\ \ \ \ exclusive\ with\ \-\-print\-only\.\l\l\	AUTHOR\l\	\ \ Written\ by\ Florian\ Kaufmann\ \<sensorflo\@gmail\.com\>\l\l\	COPYRIGHT\l\	\ \ Florian\ Kaufmann\ 2014\.\ License\ GPLv3\+\:\ GNU\ GPL\ version\ 3\ or\ later\l\	\ \ \<http\:\/\/gnu\.org\/licenses\/gpl\.html\>\.\ This\ is\ free\ software\:\ you\ are\ free\ to\l\	\ \ change\ and\ redistribute\ it\.\ There\ is\ NO\ WARRANTY\,\ to\ the\ extent\ permitted\ by\l\	\ \ law\.\l}"]
  workingtree_root -> ___Users___sbacha___gitdot______gitignore
  ___Users___sbacha___gitdot______gitignore [label="{{working_tree_node:file|\.gitignore}|\.DS\_Store\lnode\_modules\l}"]
  workingtree_root -> ___Users___sbacha___gitdot______gitattributes
  ___Users___sbacha___gitdot______gitattributes [label="{{working_tree_node:file|\.gitattributes}|git\-draw\ text\ eol\=lf\l\*\.sh\ text\ eol\=lf\l}"]
  workingtree_root [label="{{working_tree_node:dir|\<root\>}|\.editorconfig\lgit\-draw\lREADME\.md\l\.gitignore\l\.gitattributes\l}"]
}
